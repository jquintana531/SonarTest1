{"version":3,"file":"auth.interceptor.d.ts","sources":["auth.interceptor.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Injector } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nexport declare class AuthInterceptor implements HttpInterceptor {\n    private injector;\n    /**\n     * Is refresh token is being executed\n     */\n    private refreshInProgress;\n    /**\n     * Notify all outstanding requests through this subject\n     */\n    private refreshSubject;\n    constructor(injector: Injector);\n    /**\n     * Intercept an outgoing `HttpRequest`\n     */\n    intercept(req: HttpRequest<any>, delegate: HttpHandler): Observable<HttpEvent<any>>;\n    /**\n     * Process all the requests via custom interceptors.\n     */\n    private processIntercept;\n    /**\n     * Request interceptor. Delays request if refresh is in progress\n     * otherwise adds token to the headers\n     */\n    private request;\n    /**\n     * Failed request interceptor, check if it has to be processed with refresh\n     */\n    private responseError;\n    /**\n     * Add access token to headers or the request\n     */\n    private addToken;\n    /**\n     * Delay request, by subscribing on refresh event, once it finished, process it\n     * otherwise throw error\n     */\n    private delayRequest;\n    /**\n     * Retry request, by subscribing on refresh event, once it finished, process it\n     * otherwise throw error\n     */\n    private retryRequest;\n    /**\n     * Checks if request must be skipped by interceptor.\n     */\n    private skipRequest;\n    /**\n     * Exec optional method, will be removed in upcoming updates.\n     * Temp method until `verifyTokenRequest` will be completely replaced with skipRequest\n     */\n    private exec;\n}\n"]}