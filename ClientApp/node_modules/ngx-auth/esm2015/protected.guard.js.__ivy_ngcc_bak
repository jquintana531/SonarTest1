/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { DOCUMENT } from '@angular/common';
import { Injectable, Inject } from '@angular/core';
import { Router } from '@angular/router';
import { map } from 'rxjs/operators';
import { AuthService } from './auth.service';
import { AUTH_SERVICE, PUBLIC_FALLBACK_PAGE_URI } from './tokens';
/**
 * Guard, checks access token availability and allows or disallows access to page,
 * and redirects out
 *
 * usage: { path: 'test', component: TestComponent, canActivate: [ AuthGuard ] }
 *
 * @export
 * \@dynamic
 */
export class ProtectedGuard {
    /**
     * @param {?} authService
     * @param {?} publicFallbackPageUri
     * @param {?} document
     * @param {?} router
     */
    constructor(authService, publicFallbackPageUri, document, router) {
        this.authService = authService;
        this.publicFallbackPageUri = publicFallbackPageUri;
        this.document = document;
        this.router = router;
    }
    /**
     * CanActivate handler
     * @param {?} _route
     * @param {?} state
     * @return {?}
     */
    canActivate(_route, state) {
        return this.authService.isAuthorized()
            .pipe(map((isAuthorized) => {
            if (!isAuthorized && !this.isPublicPage(state)) {
                if (this.authService.setInterruptedUrl) {
                    this.authService.setInterruptedUrl(state.url);
                }
                this.navigate(this.publicFallbackPageUri);
                return false;
            }
            return true;
        }));
    }
    /**
     * CanActivateChild handler
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    canActivateChild(route, state) {
        return this.canActivate(route, state);
    }
    /**
     * Check, if current page is public fallback page
     * @param {?} state
     * @return {?}
     */
    isPublicPage(state) {
        return state.url === this.publicFallbackPageUri;
    }
    /**
     * Navigate away from the app / path
     * @param {?} url
     * @return {?}
     */
    navigate(url) {
        if (url.startsWith('http')) {
            this.document.location.href = url;
        }
        else {
            this.router.navigateByUrl(url);
        }
    }
}
ProtectedGuard.decorators = [
    { type: Injectable }
];
/** @nocollapse */
ProtectedGuard.ctorParameters = () => [
    { type: AuthService, decorators: [{ type: Inject, args: [AUTH_SERVICE,] }] },
    { type: String, decorators: [{ type: Inject, args: [PUBLIC_FALLBACK_PAGE_URI,] }] },
    { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
    { type: Router }
];
if (false) {
    /** @type {?} */
    ProtectedGuard.prototype.authService;
    /** @type {?} */
    ProtectedGuard.prototype.publicFallbackPageUri;
    /** @type {?} */
    ProtectedGuard.prototype.document;
    /** @type {?} */
    ProtectedGuard.prototype.router;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdGVjdGVkLmd1YXJkLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWF1dGgvIiwic291cmNlcyI6WyJwcm90ZWN0ZWQuZ3VhcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRCxPQUFPLEVBQ0wsTUFBTSxFQUtQLE1BQU0saUJBQWlCLENBQUM7QUFFekIsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXJDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsWUFBWSxFQUFFLHdCQUF3QixFQUFFLE1BQU0sVUFBVSxDQUFDOzs7Ozs7Ozs7O0FBWWxFLE1BQU0sT0FBTyxjQUFjOzs7Ozs7O0lBRXpCLFlBQytCLFdBQXdCLEVBQ1gscUJBQTZCLEVBQ3BDLFFBQWtCLEVBQzdDLE1BQWM7UUFITyxnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQUNYLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBUTtRQUNwQyxhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQzdDLFdBQU0sR0FBTixNQUFNLENBQVE7SUFDckIsQ0FBQzs7Ozs7OztJQUtHLFdBQVcsQ0FDaEIsTUFBOEIsRUFDOUIsS0FBMEI7UUFFMUIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLFlBQVksRUFBRTthQUNuQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsWUFBcUIsRUFBRSxFQUFFO1lBQ2xDLElBQUksQ0FBQyxZQUFZLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxFQUFFO2dCQUM5QyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsaUJBQWlCLEVBQUU7b0JBQ3RDLElBQUksQ0FBQyxXQUFXLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2lCQUMvQztnQkFFRCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO2dCQUUxQyxPQUFPLEtBQUssQ0FBQzthQUNkO1lBRUQsT0FBTyxJQUFJLENBQUM7UUFDZCxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ1IsQ0FBQzs7Ozs7OztJQUtNLGdCQUFnQixDQUNyQixLQUE2QixFQUM3QixLQUEwQjtRQUUxQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLENBQUM7Ozs7OztJQUtPLFlBQVksQ0FBQyxLQUEwQjtRQUM3QyxPQUFPLEtBQUssQ0FBQyxHQUFHLEtBQUssSUFBSSxDQUFDLHFCQUFxQixDQUFDO0lBQ2xELENBQUM7Ozs7OztJQUtPLFFBQVEsQ0FBQyxHQUFXO1FBQzFCLElBQUksR0FBRyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUMxQixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDO1NBQ25DO2FBQU07WUFDTCxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNoQztJQUNILENBQUM7OztZQTNERixVQUFVOzs7O1lBWkYsV0FBVyx1QkFnQmYsTUFBTSxTQUFDLFlBQVk7eUNBQ25CLE1BQU0sU0FBQyx3QkFBd0I7WUFDYSxRQUFRLHVCQUFwRCxNQUFNLFNBQUMsUUFBUTtZQTNCbEIsTUFBTTs7OztJQXlCSixxQ0FBcUQ7O0lBQ3JELCtDQUF1RTs7SUFDdkUsa0NBQXFEOztJQUNyRCxnQ0FBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBET0NVTUVOVCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIFJvdXRlcixcbiAgQ2FuQWN0aXZhdGUsXG4gIENhbkFjdGl2YXRlQ2hpbGQsXG4gIEFjdGl2YXRlZFJvdXRlU25hcHNob3QsXG4gIFJvdXRlclN0YXRlU25hcHNob3Rcbn0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tICcuL2F1dGguc2VydmljZSc7XG5pbXBvcnQgeyBBVVRIX1NFUlZJQ0UsIFBVQkxJQ19GQUxMQkFDS19QQUdFX1VSSSB9IGZyb20gJy4vdG9rZW5zJztcblxuLyoqXG4gKiBHdWFyZCwgY2hlY2tzIGFjY2VzcyB0b2tlbiBhdmFpbGFiaWxpdHkgYW5kIGFsbG93cyBvciBkaXNhbGxvd3MgYWNjZXNzIHRvIHBhZ2UsXG4gKiBhbmQgcmVkaXJlY3RzIG91dFxuICpcbiAqIHVzYWdlOiB7IHBhdGg6ICd0ZXN0JywgY29tcG9uZW50OiBUZXN0Q29tcG9uZW50LCBjYW5BY3RpdmF0ZTogWyBBdXRoR3VhcmQgXSB9XG4gKlxuICogQGV4cG9ydFxuICogQGR5bmFtaWNcbiAqL1xuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFByb3RlY3RlZEd1YXJkIGltcGxlbWVudHMgQ2FuQWN0aXZhdGUsIENhbkFjdGl2YXRlQ2hpbGQge1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBJbmplY3QoQVVUSF9TRVJWSUNFKXByaXZhdGUgYXV0aFNlcnZpY2U6IEF1dGhTZXJ2aWNlLFxuICAgIEBJbmplY3QoUFVCTElDX0ZBTExCQUNLX1BBR0VfVVJJKSBwcml2YXRlIHB1YmxpY0ZhbGxiYWNrUGFnZVVyaTogc3RyaW5nLFxuICAgIEBJbmplY3QoRE9DVU1FTlQpIHByaXZhdGUgcmVhZG9ubHkgZG9jdW1lbnQ6IERvY3VtZW50LFxuICAgIHByaXZhdGUgcm91dGVyOiBSb3V0ZXJcbiAgKSB7fVxuXG4gIC8qKlxuICAgKiBDYW5BY3RpdmF0ZSBoYW5kbGVyXG4gICAqL1xuICBwdWJsaWMgY2FuQWN0aXZhdGUoXG4gICAgX3JvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LFxuICAgIHN0YXRlOiBSb3V0ZXJTdGF0ZVNuYXBzaG90XG4gICk6IE9ic2VydmFibGU8Ym9vbGVhbj4ge1xuICAgIHJldHVybiB0aGlzLmF1dGhTZXJ2aWNlLmlzQXV0aG9yaXplZCgpXG4gICAgICAucGlwZShtYXAoKGlzQXV0aG9yaXplZDogYm9vbGVhbikgPT4ge1xuICAgICAgICBpZiAoIWlzQXV0aG9yaXplZCAmJiAhdGhpcy5pc1B1YmxpY1BhZ2Uoc3RhdGUpKSB7XG4gICAgICAgICAgaWYgKHRoaXMuYXV0aFNlcnZpY2Uuc2V0SW50ZXJydXB0ZWRVcmwpIHtcbiAgICAgICAgICAgIHRoaXMuYXV0aFNlcnZpY2Uuc2V0SW50ZXJydXB0ZWRVcmwoc3RhdGUudXJsKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLm5hdmlnYXRlKHRoaXMucHVibGljRmFsbGJhY2tQYWdlVXJpKTtcblxuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIENhbkFjdGl2YXRlQ2hpbGQgaGFuZGxlclxuICAgKi9cbiAgcHVibGljIGNhbkFjdGl2YXRlQ2hpbGQoXG4gICAgcm91dGU6IEFjdGl2YXRlZFJvdXRlU25hcHNob3QsXG4gICAgc3RhdGU6IFJvdXRlclN0YXRlU25hcHNob3RcbiAgKTogT2JzZXJ2YWJsZTxib29sZWFuPiB7XG4gICAgcmV0dXJuIHRoaXMuY2FuQWN0aXZhdGUocm91dGUsIHN0YXRlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjaywgaWYgY3VycmVudCBwYWdlIGlzIHB1YmxpYyBmYWxsYmFjayBwYWdlXG4gICAqL1xuICBwcml2YXRlIGlzUHVibGljUGFnZShzdGF0ZTogUm91dGVyU3RhdGVTbmFwc2hvdCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBzdGF0ZS51cmwgPT09IHRoaXMucHVibGljRmFsbGJhY2tQYWdlVXJpO1xuICB9XG5cbiAgLyoqXG4gICAqIE5hdmlnYXRlIGF3YXkgZnJvbSB0aGUgYXBwIC8gcGF0aFxuICAgKi9cbiAgcHJpdmF0ZSBuYXZpZ2F0ZSh1cmw6IHN0cmluZyk6IHZvaWQge1xuICAgIGlmICh1cmwuc3RhcnRzV2l0aCgnaHR0cCcpKSB7XG4gICAgICB0aGlzLmRvY3VtZW50LmxvY2F0aW9uLmhyZWYgPSB1cmw7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucm91dGVyLm5hdmlnYXRlQnlVcmwodXJsKTtcbiAgICB9XG4gIH1cblxufVxuIl19