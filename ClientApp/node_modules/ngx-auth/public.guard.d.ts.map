{"version":3,"file":"public.guard.d.ts","sources":["public.guard.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { CanActivate, CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n/**\n * Guard, checks access token availability and allows or disallows access to page,\n * and redirects out\n *\n * usage: { path: 'test', component: TestComponent, canActivate: [ PublicGuard ] }\n *\n * @export\n * @dynamic\n */\nexport declare class PublicGuard implements CanActivate, CanActivateChild {\n    private authService;\n    private protectedFallbackPageUri;\n    private readonly document;\n    private router;\n    constructor(authService: AuthService, protectedFallbackPageUri: string, document: Document, router: Router);\n    /**\n     * CanActivate handler\n     */\n    canActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>;\n    /**\n     * CanActivateChild handler\n     */\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>;\n    /**\n     * Check, if current page is protected fallback page\n     */\n    private isProtectedPage;\n    /**\n     * Navigate away from the app / path\n     */\n    private navigate;\n}\n"]}