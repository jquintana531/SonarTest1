import { ApplicationRef, Component, ComponentFactoryResolver, EventEmitter, Output, ViewChild, ViewContainerRef } from '@angular/core';
import { TimePickerComponent } from '../time-picker/time-picker.component';
import { Subject } from 'rxjs';
export class AtpTimePickerComponent {
    constructor(resolver, appRef) {
        this.resolver = resolver;
        this.appRef = appRef;
        this.timeSelected = new EventEmitter();
        this.config = {};
    }
    ngOnInit() {
        let config = this.config;
        config = {
            time: config.time || '00:00',
            theme: [
                'light',
                'dark',
                'material'
            ].indexOf(config.theme) > 0 ? config.theme : 'light' || config.theme || 'light',
            rangeTime: config.rangeTime || { start: '0:0', end: '24:0' },
            arrowStyle: config.arrowStyle || {}
        };
        config.arrowStyle = {
            background: (config.arrowStyle.background) ?
                config.arrowStyle.background : config.theme !== undefined ?
                config.theme === 'dark' ? 'rgb(128, 203, 196)' : 'blue' : 'blue',
            color: config.arrowStyle.color || '#fff'
        };
        const cfr = this.resolver.resolveComponentFactory(TimePickerComponent);
        const tsc = this.container.createComponent(cfr);
        tsc.instance.subject = new Subject();
        tsc.instance._ref = tsc;
        tsc.instance.appRef = this.appRef;
        tsc.instance.timerElement = '';
        tsc.instance.config = config;
        tsc.instance.activeModal = true;
        tsc.instance.isPopup = false;
        tsc.instance.ParseStringToTime(config.time);
        tsc.instance.subject.asObservable().subscribe(time => {
            this.timeSelected.emit(time);
        });
    }
}
AtpTimePickerComponent.decorators = [
    { type: Component, args: [{
                selector: 'atp-time-picker',
                template: "<div #container></div>",
                styles: [".atp-time-picker .icon-container{display:inline-block;margin-right:.2em}.atp-time-picker .icon-container svg{cursor:pointer;position:relative;top:.5em}.atp-time-picker .icon-container ::ng-deep i{cursor:pointer}\n"]
            },] }
];
AtpTimePickerComponent.ctorParameters = () => [
    { type: ComponentFactoryResolver },
    { type: ApplicationRef }
];
AtpTimePickerComponent.propDecorators = {
    container: [{ type: ViewChild, args: ['container', { read: ViewContainerRef },] }],
    timeSelected: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXRwLXRpbWUtcGlja2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FtYXppbmctdGltZS1waWNrZXIvc3JjL2xpYi9hdHAtdGltZS1waWNrZXIvYXRwLXRpbWUtcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsY0FBYyxFQUNkLFNBQVMsRUFDVCx3QkFBd0IsRUFDeEIsWUFBWSxFQUVaLE1BQU0sRUFDTixTQUFTLEVBQ1QsZ0JBQWdCLEVBQ2pCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHNDQUFzQyxDQUFDO0FBRXpFLE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFRN0IsTUFBTSxPQUFPLHNCQUFzQjtJQU1qQyxZQUNVLFFBQWtDLEVBQ2xDLE1BQXNCO1FBRHRCLGFBQVEsR0FBUixRQUFRLENBQTBCO1FBQ2xDLFdBQU0sR0FBTixNQUFNLENBQWdCO1FBTHRCLGlCQUFZLEdBQXlCLElBQUksWUFBWSxFQUFVLENBQUM7UUFDbkUsV0FBTSxHQUFxQixFQUFFLENBQUM7SUFNckMsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3pCLE1BQU0sR0FBRztZQUNQLElBQUksRUFBRSxNQUFNLENBQUMsSUFBSSxJQUFJLE9BQU87WUFDNUIsS0FBSyxFQUFFO2dCQUNMLE9BQU87Z0JBQ1AsTUFBTTtnQkFDTixVQUFVO2FBQ1gsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsT0FBTyxJQUFJLE1BQU0sQ0FBQyxLQUFLLElBQUksT0FBTztZQUMvRSxTQUFTLEVBQUUsTUFBTSxDQUFDLFNBQVMsSUFBSSxFQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBQztZQUMxRCxVQUFVLEVBQUUsTUFBTSxDQUFDLFVBQVUsSUFBSSxFQUFFO1NBQ3BDLENBQUM7UUFDRixNQUFNLENBQUMsVUFBVSxHQUFHO1lBQ2xCLFVBQVUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztnQkFDMUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUM7Z0JBQ3pELE1BQU0sQ0FBQyxLQUFLLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNO1lBQ3BFLEtBQUssRUFBRSxNQUFNLENBQUMsVUFBVSxDQUFDLEtBQUssSUFBSSxNQUFNO1NBQ3pDLENBQUM7UUFDRixNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLHVCQUF1QixDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDdkUsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDaEQsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQUcsSUFBSSxPQUFPLEVBQU8sQ0FBQztRQUMxQyxHQUFHLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUM7UUFDeEIsR0FBRyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNsQyxHQUFHLENBQUMsUUFBUSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7UUFDL0IsR0FBRyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQzdCLEdBQUcsQ0FBQyxRQUFRLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztRQUNoQyxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFDN0IsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ25ELElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQy9CLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7O1lBakRGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQixrQ0FBK0M7O2FBRWhEOzs7WUFmQyx3QkFBd0I7WUFGeEIsY0FBYzs7O3dCQW9CYixTQUFTLFNBQUMsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFnQixFQUFDOzJCQUUvQyxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQXBwbGljYXRpb25SZWYsXG4gIENvbXBvbmVudCxcbiAgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxuICBFdmVudEVtaXR0ZXIsXG4gIE9uSW5pdCxcbiAgT3V0cHV0LFxuICBWaWV3Q2hpbGQsXG4gIFZpZXdDb250YWluZXJSZWZcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1RpbWVQaWNrZXJDb21wb25lbnR9IGZyb20gJy4uL3RpbWUtcGlja2VyL3RpbWUtcGlja2VyLmNvbXBvbmVudCc7XG5pbXBvcnQge1RpbWVQaWNrZXJDb25maWd9IGZyb20gJy4uL2RlZmluaXRpb25zJztcbmltcG9ydCB7U3ViamVjdH0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2F0cC10aW1lLXBpY2tlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9hdHAtdGltZS1waWNrZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9hdHAtdGltZS1waWNrZXIuY29tcG9uZW50LnNjc3MnXVxufSlcblxuZXhwb3J0IGNsYXNzIEF0cFRpbWVQaWNrZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBAVmlld0NoaWxkKCdjb250YWluZXInLCB7cmVhZDogVmlld0NvbnRhaW5lclJlZn0pIGNvbnRhaW5lcjogVmlld0NvbnRhaW5lclJlZjtcblxuICBAT3V0cHV0KCkgdGltZVNlbGVjdGVkOiBFdmVudEVtaXR0ZXI8c3RyaW5nPiA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuICBwdWJsaWMgY29uZmlnOiBUaW1lUGlja2VyQ29uZmlnID0ge307XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSByZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxuICAgIHByaXZhdGUgYXBwUmVmOiBBcHBsaWNhdGlvblJlZixcbiAgKSB7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICBsZXQgY29uZmlnID0gdGhpcy5jb25maWc7XG4gICAgY29uZmlnID0ge1xuICAgICAgdGltZTogY29uZmlnLnRpbWUgfHwgJzAwOjAwJyxcbiAgICAgIHRoZW1lOiBbXG4gICAgICAgICdsaWdodCcsXG4gICAgICAgICdkYXJrJyxcbiAgICAgICAgJ21hdGVyaWFsJ1xuICAgICAgXS5pbmRleE9mKGNvbmZpZy50aGVtZSkgPiAwID8gY29uZmlnLnRoZW1lIDogJ2xpZ2h0JyB8fCBjb25maWcudGhlbWUgfHwgJ2xpZ2h0JyxcbiAgICAgIHJhbmdlVGltZTogY29uZmlnLnJhbmdlVGltZSB8fCB7c3RhcnQ6ICcwOjAnLCBlbmQ6ICcyNDowJ30sXG4gICAgICBhcnJvd1N0eWxlOiBjb25maWcuYXJyb3dTdHlsZSB8fCB7fVxuICAgIH07XG4gICAgY29uZmlnLmFycm93U3R5bGUgPSB7XG4gICAgICBiYWNrZ3JvdW5kOiAoY29uZmlnLmFycm93U3R5bGUuYmFja2dyb3VuZCkgP1xuICAgICAgICBjb25maWcuYXJyb3dTdHlsZS5iYWNrZ3JvdW5kIDogY29uZmlnLnRoZW1lICE9PSB1bmRlZmluZWQgP1xuICAgICAgICAgIGNvbmZpZy50aGVtZSA9PT0gJ2RhcmsnID8gJ3JnYigxMjgsIDIwMywgMTk2KScgOiAnYmx1ZScgOiAnYmx1ZScsXG4gICAgICBjb2xvcjogY29uZmlnLmFycm93U3R5bGUuY29sb3IgfHwgJyNmZmYnXG4gICAgfTtcbiAgICBjb25zdCBjZnIgPSB0aGlzLnJlc29sdmVyLnJlc29sdmVDb21wb25lbnRGYWN0b3J5KFRpbWVQaWNrZXJDb21wb25lbnQpO1xuICAgIGNvbnN0IHRzYyA9IHRoaXMuY29udGFpbmVyLmNyZWF0ZUNvbXBvbmVudChjZnIpO1xuICAgIHRzYy5pbnN0YW5jZS5zdWJqZWN0ID0gbmV3IFN1YmplY3Q8YW55PigpO1xuICAgIHRzYy5pbnN0YW5jZS5fcmVmID0gdHNjO1xuICAgIHRzYy5pbnN0YW5jZS5hcHBSZWYgPSB0aGlzLmFwcFJlZjtcbiAgICB0c2MuaW5zdGFuY2UudGltZXJFbGVtZW50ID0gJyc7XG4gICAgdHNjLmluc3RhbmNlLmNvbmZpZyA9IGNvbmZpZztcbiAgICB0c2MuaW5zdGFuY2UuYWN0aXZlTW9kYWwgPSB0cnVlO1xuICAgIHRzYy5pbnN0YW5jZS5pc1BvcHVwID0gZmFsc2U7XG4gICAgdHNjLmluc3RhbmNlLlBhcnNlU3RyaW5nVG9UaW1lKGNvbmZpZy50aW1lKTtcbiAgICB0c2MuaW5zdGFuY2Uuc3ViamVjdC5hc09ic2VydmFibGUoKS5zdWJzY3JpYmUodGltZSA9PiB7XG4gICAgICB0aGlzLnRpbWVTZWxlY3RlZC5lbWl0KHRpbWUpO1xuICAgIH0pO1xuICB9XG59XG4iXX0=