import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from '@angular/core';
import { Subject } from 'rxjs';
import { Preference } from './preferences';
import { TimePickerComponent } from './time-picker/time-picker.component';
export class AmazingTimePickerService {
    constructor(resolver, appRef, injector) {
        this.resolver = resolver;
        this.appRef = appRef;
        this.injector = injector;
    }
    open(config) {
        const thems = [
            'light',
            'dark',
            'material-red',
            'material-green',
            'material-blue',
            'material-purple',
            'material-orange'
        ];
        config = config || {};
        config = {
            time: config.time || '00:00',
            theme: thems.indexOf(config.theme) > 0 ? config.theme : 'light' || config.theme || 'light',
            rangeTime: config.rangeTime || { start: '0:0', end: '24:0' },
            arrowStyle: config.arrowStyle || {},
            locale: config.locale || 'en',
            changeToMinutes: config.changeToMinutes,
            animation: (config.animation == null || config.animation === 'fade') ? 'fade' : (config.animation === 'rotate') ? 'rotate' : false,
            preference: config.preference || null,
            onlyHour: config.onlyHour,
            onlyMinute: config.onlyMinute,
            onlyAM: config.onlyAM,
            onlyPM: config.onlyPM,
        };
        config.rangeTime = {
            start: config.rangeTime.start || '0:0',
            end: config.rangeTime.end || '24:0',
        };
        config.arrowStyle = {
            background: (config.arrowStyle.background) ?
                config.arrowStyle.background : config.theme !== undefined ?
                config.theme === 'dark' ? 'rgb(128, 203, 196)' : '' : '',
            color: config.arrowStyle.color || ''
        };
        const componentRef = this.resolver.resolveComponentFactory(TimePickerComponent);
        const tsc = componentRef.create(this.injector);
        this.appRef.attachView(tsc.hostView);
        const domElem = tsc.hostView.rootNodes[0];
        document.body.appendChild(domElem);
        tsc.instance.subject = new Subject();
        tsc.instance._ref = tsc;
        tsc.instance.appRef = this.appRef;
        tsc.instance.timerElement = '';
        tsc.instance.config = config;
        if (config.preference) {
            tsc.instance.preference = config.preference;
        }
        else {
            tsc.instance.preference = Preference(config.locale);
        }
        tsc.instance.ParseStringToTime(config.time);
        return {
            afterClose: () => tsc.instance.subject.asObservable()
        };
    }
}
AmazingTimePickerService.decorators = [
    { type: Injectable }
];
AmazingTimePickerService.ctorParameters = () => [
    { type: ComponentFactoryResolver },
    { type: ApplicationRef },
    { type: Injector }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1hemluZy10aW1lLXBpY2tlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvYW1hemluZy10aW1lLXBpY2tlci9zcmMvbGliL2FtYXppbmctdGltZS1waWNrZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsY0FBYyxFQUFFLHdCQUF3QixFQUFtQixVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzlHLE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFFN0IsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQztBQUd4RSxNQUFNLE9BQU8sd0JBQXdCO0lBRW5DLFlBQ1UsUUFBa0MsRUFDbEMsTUFBc0IsRUFDdEIsUUFBa0I7UUFGbEIsYUFBUSxHQUFSLFFBQVEsQ0FBMEI7UUFDbEMsV0FBTSxHQUFOLE1BQU0sQ0FBZ0I7UUFDdEIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtJQUU1QixDQUFDO0lBRUQsSUFBSSxDQUFDLE1BQXlCO1FBQzVCLE1BQU0sS0FBSyxHQUFHO1lBQ1osT0FBTztZQUNQLE1BQU07WUFDTixjQUFjO1lBQ2QsZ0JBQWdCO1lBQ2hCLGVBQWU7WUFDZixpQkFBaUI7WUFDakIsaUJBQWlCO1NBQ2xCLENBQUM7UUFDRixNQUFNLEdBQUcsTUFBTSxJQUFJLEVBQUUsQ0FBQztRQUN0QixNQUFNLEdBQUc7WUFDUCxJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUksSUFBSSxPQUFPO1lBQzVCLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE9BQU8sSUFBSSxNQUFNLENBQUMsS0FBSyxJ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aUIsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUMsT0FBTztZQUNMLFVBQVUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUU7U0FDdEQsQ0FBQztJQUNKLENBQUM7OztZQWpFRixVQUFVOzs7WUFOYSx3QkFBd0I7WUFBeEMsY0FBYztZQUF5RCxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBcHBsaWNhdGlvblJlZiwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBFbWJlZGRlZFZpZXdSZWYsIEluamVjdGFibGUsIEluamVjdG9yfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7U3ViamVjdH0gZnJvbSAncnhqcyc7XG5pbXBvcnQge0lEaWFsb2dSZXN1bHQsIFRpbWVQaWNrZXJDb25maWd9IGZyb20gJy4vZGVmaW5pdGlvbnMnO1xuaW1wb3J0IHtQcmVmZXJlbmNlfSBmcm9tICcuL3ByZWZlcmVuY2VzJztcbmltcG9ydCB7VGltZVBpY2tlckNvbXBvbmVudH0gZnJvbSAnLi90aW1lLXBpY2tlci90aW1lLXBpY2tlci5jb21wb25lbnQnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQW1hemluZ1RpbWVQaWNrZXJTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXG4gICAgcHJpdmF0ZSBhcHBSZWY6IEFwcGxpY2F0aW9uUmVmLFxuICAgIHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yXG4gICkge1xuICB9XG5cbiAgb3Blbihjb25maWc/OiBUaW1lUGlja2VyQ29uZmlnKTogSURpYWxvZ1Jlc3VsdCB7XG4gICAgY29uc3QgdGhlbXMgPSBbXG4gICAgICAnbGlnaHQnLFxuICAgICAgJ2RhcmsnLFxuICAgICAgJ21hdGVyaWFsLXJlZCcsXG4gICAgICAnbWF0ZXJpYWwtZ3JlZW4nLFxuICAgICAgJ21hdGVyaWFsLWJsdWUnLFxuICAgICAgJ21hdGVyaWFsLXB1cnBsZScsXG4gICAgICAnbWF0ZXJpYWwtb3JhbmdlJ1xuICAgIF07XG4gICAgY29uZmlnID0gY29uZmlnIHx8IHt9O1xuICAgIGNvbmZpZyA9IHtcbiAgICAgIHRpbWU6IGNvbmZpZy50aW1lIHx8ICcwMDowMCcsXG4gICAgICB0aGVtZTogdGhlbXMuaW5kZXhPZihjb25maWcudGhlbWUpID4gMCA/IGNvbmZpZy50aGVtZSA6ICdsaWdodCcgfHwgY29uZmlnLnRoZW1lIHx8ICdsaWdodCcsXG4gICAgICByYW5nZVRpbWU6IGNvbmZpZy5yYW5nZVRpbWUgfHwge3N0YXJ0OiAnMDowJywgZW5kOiAnMjQ6MCd9LFxuICAgICAgYXJyb3dTdHlsZTogY29uZmlnLmFycm93U3R5bGUgfHwge30sXG4gICAgICBsb2NhbGU6IGNvbmZpZy5sb2NhbGUgfHwgJ2VuJyxcbiAgICAgIGNoYW5nZVRvTWludXRlczogY29uZmlnLmNoYW5nZVRvTWludXRlcyxcbiAgICAgIGFuaW1hdGlvbjogKGNvbmZpZy5hbmltYXRpb24gPT0gbnVsbCB8fCBjb25maWcuYW5pbWF0aW9uID09PSAnZmFkZScpID8gJ2ZhZGUnIDogKGNvbmZpZy5hbmltYXRpb24gPT09ICdyb3RhdGUnKSA/ICdyb3RhdGUnIDogZmFsc2UsXG4gICAgICBwcmVmZXJlbmNlOiBjb25maWcucHJlZmVyZW5jZSB8fCBudWxsLFxuICAgICAgb25seUhvdXI6IGNvbmZpZy5vbmx5SG91cixcbiAgICAgIG9ubHlNaW51dGU6IGNvbmZpZy5vbmx5TWludXRlLFxuICAgICAgb25seUFNOiBjb25maWcub25seUFNLFxuICAgICAgb25seVBNOiBjb25maWcub25seVBNLFxuICAgIH0gYXMgVGltZVBpY2tlckNvbmZpZztcblxuICAgIGNvbmZpZy5yYW5nZVRpbWUgPSB7XG4gICAgICBzdGFydDogY29uZmlnLnJhbmdlVGltZS5zdGFydCB8fCAnMDowJyxcbiAgICAgIGVuZDogY29uZmlnLnJhbmdlVGltZS5lbmQgfHwgJzI0OjAnLFxuICAgIH07XG4gICAgY29uZmlnLmFycm93U3R5bGUgPSB7XG4gICAgICBiYWNrZ3JvdW5kOiAoY29uZmlnLmFycm93U3R5bGUuYmFja2dyb3VuZCkgP1xuICAgICAgICBjb25maWcuYXJyb3dTdHlsZS5iYWNrZ3JvdW5kIDogY29uZmlnLnRoZW1lICE9PSB1bmRlZmluZWQgP1xuICAgICAgICAgIGNvbmZpZy50aGVtZSA9PT0gJ2RhcmsnID8gJ3JnYigxMjgsIDIwMywgMTk2KScgOiAnJyA6ICcnLFxuICAgICAgY29sb3I6IGNvbmZpZy5hcnJvd1N0eWxlLmNvbG9yIHx8ICcnXG4gICAgfTtcbiAgICBjb25zdCBjb21wb25lbnRSZWYgPSB0aGlzLnJlc29sdmVyLnJlc29sdmVDb21wb25lbnRGYWN0b3J5KFRpbWVQaWNrZXJDb21wb25lbnQpO1xuICAgIGNvbnN0IHRzYyA9IGNvbXBvbmVudFJlZi5jcmVhdGUodGhpcy5pbmplY3Rvcik7XG4gICAgdGhpcy5hcHBSZWYuYXR0YWNoVmlldyh0c2MuaG9zdFZpZXcpO1xuICAgIGNvbnN0IGRvbUVsZW0gPSAodHNjLmhvc3RWaWV3IGFzIEVtYmVkZGVkVmlld1JlZjxhbnk+KS5yb290Tm9kZXNbMF0gYXMgSFRNTEVsZW1lbnQ7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkb21FbGVtKTtcbiAgICB0c2MuaW5zdGFuY2Uuc3ViamVjdCA9IG5ldyBTdWJqZWN0PGFueT4oKTtcbiAgICB0c2MuaW5zdGFuY2UuX3JlZiA9IHRzYztcbiAgICB0c2MuaW5zdGFuY2UuYXBwUmVmID0gdGhpcy5hcHBSZWY7XG4gICAgdHNjLmluc3RhbmNlLnRpbWVyRWxlbWVudCA9ICcnO1xuICAgIHRzYy5pbnN0YW5jZS5jb25maWcgPSBjb25maWc7XG4gICAgaWYgKGNvbmZpZy5wcmVmZXJlbmNlKSB7XG4gICAgICB0c2MuaW5zdGFuY2UucHJlZmVyZW5jZSA9IGNvbmZpZy5wcmVmZXJlbmNlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0c2MuaW5zdGFuY2UucHJlZmVyZW5jZSA9IFByZWZlcmVuY2UoY29uZmlnLmxvY2FsZSk7XG4gICAgfVxuICAgIHRzYy5pbnN0YW5jZS5QYXJzZVN0cmluZ1RvVGltZShjb25maWcudGltZSk7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFmdGVyQ2xvc2U6ICgpID0+IHRzYy5pbnN0YW5jZS5zdWJqZWN0LmFzT2JzZXJ2YWJsZSgpXG4gICAgfTtcbiAgfVxufVxuIl19