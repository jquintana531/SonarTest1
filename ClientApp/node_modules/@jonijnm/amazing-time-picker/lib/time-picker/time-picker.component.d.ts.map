{"version":3,"file":"time-picker.component.d.ts","sources":["time-picker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit } from '@angular/core';\nimport { IClockNumber, IDisplayPreference, ITime, TimePickerConfig } from '../definitions';\nimport { AtpCoreService } from '../atp-core.service';\nexport declare class TimePickerComponent implements OnInit {\n    private core;\n    _ref: any;\n    subject: any;\n    activeModal: boolean;\n    timerElement: any;\n    clockObject: Array<any>;\n    isClicked: boolean;\n    clockType: 'minute' | 'hour';\n    time: ITime;\n    nowTime: any;\n    degree: any;\n    config: TimePickerConfig;\n    appRef: any;\n    isPopup: boolean;\n    allowed: any;\n    preference: IDisplayPreference;\n    changeToMin: boolean;\n    private animationTime;\n    constructor(core: AtpCoreService);\n    ParseStringToTime(time: string): void;\n    GetTime(): void;\n    clockMaker: () => void;\n    setActiveTime: () => void;\n    setArrow: (obj: any) => void;\n    rotationClass: (degrees: any) => void;\n    setTime(): void;\n    getDegree: (ele: any) => void;\n    private GetNowTime;\n    checkBet(): void;\n    /**\n     * Check if clock button time is not in allowed times and disabled\n     * @param t Button Time Value\n     */\n    checkDisabled(t: any): boolean;\n    modalAnimation(): void;\n    ngOnInit(): void;\n    MinuteClick(): boolean;\n    HourClick(): boolean;\n    ChangeAnimational(type: 'minute' | 'hour'): void;\n    SetAM(): boolean;\n    SetPM(): boolean;\n    Close(e: any): void;\n    getClockArrowStyle(): {};\n    getAnimationTime(): string;\n    /**\n     * Event on clock mouse click down\n     * @param event - captured event\n     */\n    updateClockDown(event: any): void;\n    setNewRotation(): void;\n    GetSeparator(): string;\n    GetPeriod(period: 'AM' | 'PM'): any;\n    GetMinute(): any;\n    GetHour(): any;\n    GetClockTime(clock: IClockNumber): any;\n    GetLabel(key: string): any;\n}\n"]}