import { ElementRef, OnDestroy, AfterViewInit, EventEmitter } from '@angular/core';
import Viewer from 'viewerjs';
import * as ɵngcc0 from '@angular/core';
export declare class NgxViewerDirective implements AfterViewInit, OnDestroy {
    private elementRef;
    viewerOptions: Viewer.Options;
    viewerReady: EventEmitter<Event>;
    viewerShow: EventEmitter<Event>;
    viewerShown: EventEmitter<Event>;
    viewerHide: EventEmitter<Event>;
    viewerHidden: EventEmitter<Event>;
    viewerView: EventEmitter<Event>;
    viewerViewed: EventEmitter<Event>;
    viewerZoom: EventEmitter<Event>;
    viewerZoomed: EventEmitter<Event>;
    instance: Viewer;
    private nativeElement;
    constructor(elementRef: ElementRef);
    ngAfterViewInit(): void;
    private initViewer;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgxViewerDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<NgxViewerDirective, "[ngxViewer]", never, { "viewerOptions": "viewerOptions"; }, { "viewerReady": "viewerReady"; "viewerShow": "viewerShow"; "viewerShown": "viewerShown"; "viewerHide": "viewerHide"; "viewerHidden": "viewerHidden"; "viewerView": "viewerView"; "viewerViewed": "viewerViewed"; "viewerZoom": "viewerZoom"; "viewerZoomed": "viewerZoomed"; }, never>;
}

//# sourceMappingURL=ngx-viewer.directive.d.ts.map