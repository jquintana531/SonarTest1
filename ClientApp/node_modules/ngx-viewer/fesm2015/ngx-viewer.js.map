{"version":3,"file":"ngx-viewer.js","sources":["ngx-viewer/lib/ngx-viewer.directive.ts","ngx-viewer/lib/ngx-viewer.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, ElementRef, NgModule, OnDestroy, AfterViewInit, Input, Output, EventEmitter } from '@angular/core';\nimport Viewer from 'viewerjs';\n\n@Directive({\n  selector: '[ngxViewer]'\n})\nexport class NgxViewerDirective implements AfterViewInit, OnDestroy {\n  @Input() viewerOptions: Viewer.Options = {};\n\n  @Output() viewerReady: EventEmitter<Event> = new EventEmitter<Event>();\n  @Output() viewerShow: EventEmitter<Event> = new EventEmitter<Event>();\n  @Output() viewerShown: EventEmitter<Event> = new EventEmitter<Event>();\n  @Output() viewerHide: EventEmitter<Event> = new EventEmitter<Event>();\n  @Output() viewerHidden: EventEmitter<Event> = new EventEmitter<Event>();\n  @Output() viewerView: EventEmitter<Event> = new EventEmitter<Event>();\n  @Output() viewerViewed: EventEmitter<Event> = new EventEmitter<Event>();\n  @Output() viewerZoom: EventEmitter<Event> = new EventEmitter<Event>();\n  @Output() viewerZoomed: EventEmitter<Event> = new EventEmitter<Event>();\n\n  instance: Viewer;\n\n  private nativeElement: HTMLElement;\n\n  constructor(private elementRef: ElementRef) {\n    this.nativeElement = this.elementRef.nativeElement;\n  }\n\n  public ngAfterViewInit(): void {\n    this.initViewer();\n  }\n\n  private initViewer(): void {\n    if (this.instance) {\n      this.instance.destroy();\n    }\n\n    this.instance = new Viewer(this.nativeElement, {\n      // Transitions currently break the Viewer when running optimizations during ng build (i.e in prod mode)\n      // TODO: Find a fix for this so we don't have to force disable transitions\n      transition: false,\n      ...this.viewerOptions\n    });\n\n    this.nativeElement.addEventListener('ready', event => this.viewerReady.emit(event), false);\n    this.nativeElement.addEventListener('show', event => this.viewerShow.emit(event), false);\n    this.nativeElement.addEventListener('shown', event => this.viewerShown.emit(event), false);\n    this.nativeElement.addEventListener('hide', event => this.viewerHide.emit(event), false);\n    this.nativeElement.addEventListener('hidden', event => this.viewerHidden.emit(event), false);\n    this.nativeElement.addEventListener('view', event => this.viewerView.emit(event), false);\n    this.nativeElement.addEventListener('viewed', event => this.viewerViewed.emit(event), false);\n    this.nativeElement.addEventListener('zoom', event => this.viewerZoom.emit(event), false);\n    this.nativeElement.addEventListener('zoomed', event => this.viewerZoomed.emit(event), false);\n  }\n\n  public ngOnDestroy(): void {\n    if (this.instance) {\n      this.instance.destroy();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxViewerDirective } from './ngx-viewer.directive';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [NgxViewerDirective],\n  exports: [NgxViewerDirective]\n})\nexport class NgxViewerModule { }\n"]}