{"version":3,"file":"ngx-mask.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","ngx-mask/app/ngx-mask/config.ts","ngx-mask/app/ngx-mask/mask-applier.service.ts","ngx-mask/app/ngx-mask/mask.service.ts","ngx-mask/app/ngx-mask/mask.directive.ts","ngx-mask/app/ngx-mask/mask.pipe.ts","ngx-mask/app/ngx-mask/ngx-mask.module.ts"],"names":["InjectionToken","Injectable","tslib_1.__param","Inject","tslib_1.__extends","DOCUMENT","ElementRef","Renderer2","tslib_1.__decorate","Input","HostListener","Directive","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","Pipe","NgModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nexport interface IConfig {\n    suffix: string;\n    prefix: string;\n    clearIfNotMatch: boolean;\n    showTemplate: boolean;\n    showMaskTyped: boolean;\n    shownMaskExpression: string;\n    dropSpecialCharacters: boolean | string[];\n    specialCharacters: string[];\n    hiddenInput: boolean | undefined;\n    validation: boolean;\n    patterns: {\n        [character: string]: {\n            pattern: RegExp;\n            optional?: boolean;\n            symbol?: string;\n        };\n    };\n}\n\nexport type optionsConfig = Partial<IConfig>;\nexport const config: InjectionToken<IConfig> = new InjectionToken('config');\nexport const NEW_CONFIG: InjectionToken<IConfig> = new InjectionToken('NEW_CONFIG');\nexport const INITIAL_CONFIG: InjectionToken<IConfig> = new InjectionToken('INITIAL_CONFIG');\n\nexport const initialConfig: IConfig = {\n    suffix: '',\n    prefix: '',\n    clearIfNotMatch: false,\n    showTemplate: false,\n    showMaskTyped: false,\n    dropSpecialCharacters: true,\n    hiddenInput: undefined,\n    shownMaskExpression: '',\n    validation: true,\n    // tslint:disable-next-line: quotemark\n    specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\"', \"'\"],\n    patterns: {\n        '0': {\n            pattern: new RegExp('\\\\d'),\n        },\n        '9': {\n            pattern: new RegExp('\\\\d'),\n            optional: true,\n        },\n        X: {\n            pattern: new RegExp('\\\\d'),\n            symbol: '*',\n        },\n        A: {\n            pattern: new RegExp('[a-zA-Z0-9]'),\n        },\n        S: {\n            pattern: new RegExp('[a-zA-Z]'),\n        },\n        d: {\n            pattern: new RegExp('\\\\d'),\n        },\n        m: {\n            pattern: new RegExp('\\\\d'),\n        },\n        M: {\n            pattern: new RegExp('\\\\d'),\n        },\n        H: {\n            pattern: new RegExp('\\\\d'),\n        },\n        h: {\n            pattern: new RegExp('\\\\d'),\n        },\n        s: {\n            pattern: new RegExp('\\\\d'),\n        },\n    },\n};\n\nexport const withoutValidation: string[] = [\n    'percent',\n    'Hh:m0:s0',\n    'Hh:m0',\n    'Hh',\n    'm0:s0',\n    's0',\n    'm0',\n    'separator',\n    'dot_separator',\n    'comma_separator',\n    'd0/M0/0000',\n    'd0/M0',\n    'd0',\n    'M0',\n];\n","import { Inject, Injectable } from '@angular/core';\nimport { config, IConfig } from './config';\n\nexport enum Separators {\n    SEPARATOR = 'separator',\n    COMMA_SEPARATOR = 'comma_separator',\n    DOT_SEPARATOR = 'dot_separator',\n}\n\n@Injectable()\nexport class MaskApplierService {\n    public dropSpecialCharacters: IConfig['dropSpecialCharacters'];\n    public hiddenInput: IConfig['hiddenInput'];\n    public showTemplate!: IConfig['showTemplate'];\n    public clearIfNotMatch!: IConfig['clearIfNotMatch'];\n    public maskExpression: string = '';\n    public actualValue: string = '';\n    public shownMaskExpression: string = '';\n    public maskSpecialCharacters!: IConfig['specialCharacters'];\n    public maskAvailablePatterns!: IConfig['patterns'];\n    public prefix!: IConfig['prefix'];\n    public suffix!: IConfig['suffix'];\n    public customPattern!: IConfig['patterns'];\n    public ipError?: boolean;\n    public showMaskTyped!: IConfig['showMaskTyped'];\n    public validation: IConfig['validation'];\n\n    private _shift!: Set<number>;\n\n    public constructor(@Inject(config) protected _config: IConfig) {\n        this._shift = new Set();\n        this.clearIfNotMatch = this._config.clearIfNotMatch;\n        this.dropSpecialCharacters = this._config.dropSpecialCharacters;\n        this.maskSpecialCharacters = this._config!.specialCharacters;\n        this.maskAvailablePatterns = this._config.patterns;\n        this.prefix = this._config.prefix;\n        this.suffix = this._config.suffix;\n        this.hiddenInput = this._config.hiddenInput;\n        this.showMaskTyped = this._config.showMaskTyped;\n        this.validation = this._config.validation;\n    }\n    // tslint:disable-next-line:no-any\n    public applyMaskWithPattern(inputValue: string, maskAndPattern: [string, IConfig['patterns']]): string {\n        const [mask, customPattern] = maskAndPattern;\n        this.customPattern = customPattern;\n        return this.applyMask(inputValue, mask);\n    }\n    public applyMask(\n        inputValue: string,\n        maskExpression: string,\n        position: number = 0,\n        cb: Function = () => {}\n    ): string {\n        if (inputValue === undefined || inputValue === null || maskExpression === undefined) {\n            return '';\n        }\n        let cursor: number = 0;\n        let result: string = ``;\n        let multi: boolean = false;\n        let backspaceShift: boolean = false;\n        let shift: number = 1;\n        if (inputValue.slice(0, this.prefix.length) === this.prefix) {\n            inputValue = inputValue.slice(this.prefix.length, inputValue.length);\n        }\n        const inputArray: string[] = inputValue.toString().split('');\n        if (maskExpression === 'IP') {\n            this.ipError = !!(inputArray.filter((i: string) => i === '.').length < 3 && inputArray.length < 7);\n            maskExpression = '099.099.099.099';\n        }\n        if (maskExpression.startsWith('percent')) {\n            if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,\\/]/)) {\n                inputValue = this._checkInput(inputValue);\n                const precision: number = this.getPrecision(maskExpression);\n                inputValue = this.checkInputPrecision(inputValue, precision, '.');\n            }\n            if (this.percentage(inputValue)) {\n                result = inputValue;\n            } else {\n                result = inputValue.substring(0, inputValue.length - 1);\n            }\n        } else if (\n            maskExpression.startsWith(Separators.SEPARATOR) ||\n            maskExpression.startsWith(Separators.DOT_SEPARATOR) ||\n            maskExpression.startsWith(Separators.COMMA_SEPARATOR)\n        ) {\n            if (\n                inputValue.match('[wÐ°-ÑÐ-Ð¯]') ||\n                inputValue.match('[a-z]|[A-Z]') ||\n                inputValue.match(/[-@#!$%\\\\^&*()_Â£Â¬'+|~=`{}\\[\\]:\";<>.?\\/]/)\n            ) {\n                inputValue = this._checkInput(inputValue);\n            }\n            const precision: number = this.getPrecision(maskExpression);\n            let strForSep: string;\n            if (maskExpression.startsWith(Separators.SEPARATOR)) {\n                if (\n                    inputValue.includes(',') &&\n                    inputValue.endsWith(',') &&\n                    inputValue.indexOf(',') !== inputValue.lastIndexOf(',')\n                ) {\n                    inputValue = inputValue.substring(0, inputValue.length - 1);\n                }\n            }\n            if (maskExpression.startsWith(Separators.DOT_SEPARATOR)) {\n                if (\n                    inputValue.indexOf('.') !== -1 &&\n                    inputValue.indexOf('.') === inputValue.lastIndexOf('.') &&\n                    inputValue.indexOf('.') > 3\n                ) {\n                    inputValue = inputValue.replace('.', ',');\n                }\n                inputValue =\n                    inputValue.length > 1 && inputValue[0] === '0' && inputValue[1] !== ','\n                        ? inputValue.slice(1, inputValue.length)\n                        : inputValue;\n            }\n            if (maskExpression.startsWith(Separators.COMMA_SEPARATOR)) {\n                inputValue =\n                    inputValue.length > 1 && inputValue[0] === '0' && inputValue[1] !== '.'\n                        ? inputValue.slice(1, inputValue.length)\n                        : inputValue;\n            }\n            if (maskExpression.startsWith(Separators.SEPARATOR)) {\n                if (inputValue.match(/[@#!$%^&*()_+|~=`{}\\[\\]:.\";<>?\\/]/)) {\n                    inputValue = inputValue.substring(0, inputValue.length - 1);\n                }\n                inputValue = this.checkInputPrecision(inputValue, precision, ',');\n                strForSep = inputValue.replace(/\\s/g, '');\n                result = this.separator(strForSep, ' ', ',', precision);\n            } else if (maskExpression.startsWith(Separators.DOT_SEPARATOR)) {\n                if (inputValue.match(/[@#!$%^&*()_+|~=`{}\\[\\]:\\s\";<>?\\/]/)) {\n                    inputValue = inputValue.substring(0, inputValue.length - 1);\n                }\n                inputValue = this.checkInputPrecision(inputValue, precision, ',');\n                strForSep = inputValue.replace(/\\./g, '');\n                result = this.separator(strForSep, '.', ',', precision);\n            } else if (maskExpression.startsWith(Separators.COMMA_SEPARATOR)) {\n                strForSep = inputValue.replace(/,/g, '');\n                result = this.separator(strForSep, ',', '.', precision);\n            }\n\n            const commaShift: number = result.indexOf(',') - inputValue.indexOf(',');\n            const shiftStep: number = result.length - inputValue.length;\n\n            if (shiftStep > 0 && result[position] !== ',') {\n                backspaceShift = true;\n                let _shift: number = 0;\n                do {\n                    this._shift.add(position + _shift);\n                    _shift++;\n                } while (_shift < shiftStep);\n            } else if (\n                (commaShift !== 0 && position > 0 && !(result.indexOf(',') >= position && position > 3)) ||\n                (!(result.indexOf('.') >= position && position > 3) && shiftStep <= 0)\n            ) {\n                this._shift.clear();\n                backspaceShift = true;\n                shift = shiftStep;\n                position += shiftStep;\n                this._shift.add(position);\n            } else {\n                this._shift.clear();\n            }\n        } else {\n            for (\n                // tslint:disable-next-line\n                let i: number = 0, inputSymbol: string = inputArray[0];\n                i < inputArray.length;\n                i++, inputSymbol = inputArray[i]\n            ) {\n                if (cursor === maskExpression.length) {\n                    break;\n                }\n                if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '?') {\n                    result += inputSymbol;\n                    cursor += 2;\n                } else if (\n                    maskExpression[cursor + 1] === '*' &&\n                    multi &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])\n                ) {\n                    result += inputSymbol;\n                    cursor += 3;\n                    multi = false;\n                } else if (\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor]) &&\n                    maskExpression[cursor + 1] === '*'\n                ) {\n                    result += inputSymbol;\n                    multi = true;\n                } else if (\n                    maskExpression[cursor + 1] === '?' &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])\n                ) {\n                    result += inputSymbol;\n                    cursor += 3;\n                } else if (\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor]) ||\n                    (this.hiddenInput &&\n                        this.maskAvailablePatterns[maskExpression[cursor]] &&\n                        this.maskAvailablePatterns[maskExpression[cursor]].symbol === inputSymbol)\n                ) {\n                    if (maskExpression[cursor] === 'H') {\n                        if (Number(inputSymbol) > 2) {\n                            cursor += 1;\n                            const shiftStep: number = /[*?]/g.test(maskExpression.slice(0, cursor))\n                                ? inputArray.length\n                                : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'h') {\n                        if (result === '2' && Number(inputSymbol) > 3) {\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'm') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            const shiftStep: number = /[*?]/g.test(maskExpression.slice(0, cursor))\n                                ? inputArray.length\n                                : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 's') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            const shiftStep: number = /[*?]/g.test(maskExpression.slice(0, cursor))\n                                ? inputArray.length\n                                : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'd') {\n                        if (Number(inputSymbol) > 3) {\n                            cursor += 1;\n                            const shiftStep: number = /[*?]/g.test(maskExpression.slice(0, cursor))\n                                ? inputArray.length\n                                : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor - 1] === 'd') {\n                        if (Number(inputValue.slice(cursor - 1, cursor + 1)) > 31) {\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'M') {\n                        if (Number(inputSymbol) > 1) {\n                            cursor += 1;\n                            const shiftStep: number = /[*?]/g.test(maskExpression.slice(0, cursor))\n                                ? inputArray.length\n                                : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor - 1] === 'M') {\n                        if (Number(inputValue.slice(cursor - 1, cursor + 1)) > 12) {\n                            continue;\n                        }\n                    }\n                    result += inputSymbol;\n                    cursor++;\n                } else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {\n                    result += maskExpression[cursor];\n                    cursor++;\n                    const shiftStep: number = /[*?]/g.test(maskExpression.slice(0, cursor))\n                        ? inputArray.length\n                        : cursor;\n                    this._shift.add(shiftStep + this.prefix.length || 0);\n                    i--;\n                } else if (\n                    this.maskSpecialCharacters.indexOf(inputSymbol) > -1 &&\n                    this.maskAvailablePatterns[maskExpression[cursor]] &&\n                    this.maskAvailablePatterns[maskExpression[cursor]].optional\n                ) {\n                    cursor++;\n                    i--;\n                } else if (\n                    this.maskExpression[cursor + 1] === '*' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2]) &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi\n                ) {\n                    cursor += 3;\n                    result += inputSymbol;\n                } else if (\n                    this.maskExpression[cursor + 1] === '?' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2]) &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi\n                ) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n            }\n        }\n        if (\n            result.length + 1 === maskExpression.length &&\n            this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1\n        ) {\n            result += maskExpression[maskExpression.length - 1];\n        }\n\n        let newPosition: number = position + 1;\n\n        while (this._shift.has(newPosition)) {\n            shift++;\n            newPosition++;\n        }\n\n        cb(this._shift.has(position) ? shift : 0, backspaceShift);\n        if (shift < 0) {\n            this._shift.clear();\n        }\n        let res: string = this.suffix ? `${this.prefix}${result}${this.suffix}` : `${this.prefix}${result}`;\n        if (result.length === 0) {\n            res = `${this.prefix}${result}`;\n        }\n        return res;\n    }\n    public _findSpecialChar(inputSymbol: string): undefined | string {\n        return this.maskSpecialCharacters.find((val: string) => val === inputSymbol);\n    }\n\n    protected _checkSymbolMask(inputSymbol: string, maskSymbol: string): boolean {\n        this.maskAvailablePatterns = this.customPattern ? this.customPattern : this.maskAvailablePatterns;\n        return (\n            this.maskAvailablePatterns[maskSymbol] &&\n            this.maskAvailablePatterns[maskSymbol].pattern &&\n            this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol)\n        );\n    }\n\n    private separator = (str: string, char: string, decimalChar: string, precision: number) => {\n        str += '';\n        const x: string[] = str.split(decimalChar);\n        const decimals: string = x.length > 1 ? `${decimalChar}${x[1]}` : '';\n        let res: string = x[0];\n        const rgx: RegExp = /(\\d+)(\\d{3})/;\n        while (rgx.test(res)) {\n            res = res.replace(rgx, '$1' + char + '$2');\n        }\n        if (precision === undefined) {\n            return res + decimals;\n        } else if (precision === 0) {\n            return res;\n        }\n        return res + decimals.substr(0, precision + 1);\n    };\n\n    private percentage = (str: string): boolean => {\n        return Number(str) >= 0 && Number(str) <= 100;\n    };\n\n    private getPrecision = (maskExpression: string): number => {\n        const x: string[] = maskExpression.split('.');\n        if (x.length > 1) {\n            return Number(x[x.length - 1]);\n        }\n        return Infinity;\n    };\n\n    private checkInputPrecision = (inputValue: string, precision: number, decimalMarker: string): string => {\n        if (precision < Infinity) {\n            let precisionRegEx: RegExp;\n\n            if (decimalMarker === '.') {\n                precisionRegEx = new RegExp(`\\\\.\\\\d{${precision}}.*$`);\n            } else {\n                precisionRegEx = new RegExp(`,\\\\d{${precision}}.*$`);\n            }\n\n            const precisionMatch: RegExpMatchArray | null = inputValue.match(precisionRegEx);\n            if (precisionMatch && precisionMatch[0].length - 1 > precision) {\n                inputValue = inputValue.substring(0, inputValue.length - 1);\n            } else if (precision === 0 && inputValue.endsWith(decimalMarker)) {\n                inputValue = inputValue.substring(0, inputValue.length - 1);\n            }\n        }\n        return inputValue;\n    };\n\n    private _checkInput(str: string): string {\n        return str\n            .split('')\n            .filter((i: string) => i.match('\\\\d') || i === '.' || i === ',')\n            .join('');\n    }\n    // tslint:disable-next-line: max-file-line-count\n}\n","import { ElementRef, Inject, Injectable, Renderer2 } from '@angular/core';\nimport { config, IConfig } from './config';\nimport { DOCUMENT } from '@angular/common';\nimport { MaskApplierService, Separators } from './mask-applier.service';\n\n@Injectable()\nexport class MaskService extends MaskApplierService {\n    public validation: boolean = true;\n    public maskExpression: string = '';\n    public isNumberValue: boolean = false;\n    public showMaskTyped: boolean = false;\n    public maskIsShown: string = '';\n    public selStart: number | null = null;\n    public selEnd: number | null = null;\n    protected _formElement: HTMLInputElement;\n    // tslint:disable-next-line\n    public onChange = (_: any) => {};\n\n    public constructor(\n        // tslint:disable-next-line\n        @Inject(DOCUMENT) private document: any,\n        @Inject(config) protected _config: IConfig,\n        private _elementRef: ElementRef,\n        private _renderer: Renderer2\n    ) {\n        super(_config);\n        this._formElement = this._elementRef.nativeElement;\n    }\n\n    // tslint:disable-next-line:cyclomatic-complexity\n    public applyMask(\n        inputValue: string,\n        maskExpression: string,\n        position: number = 0,\n        cb: Function = () => {}\n    ): string {\n        if (!maskExpression) {\n            return inputValue;\n        }\n        this.maskIsShown = this.showMaskTyped ? this.showMaskInInput() : '';\n        if (this.maskExpression === 'IP' && this.showMaskTyped) {\n            this.maskIsShown = this.showMaskInInput(inputValue || '#');\n        }\n        if (!inputValue && this.showMaskTyped) {\n            this.formControlResult(this.prefix);\n            return this.prefix + this.maskIsShown;\n        }\n        const getSymbol: string = !!inputValue && typeof this.selStart === 'number' ? inputValue[this.selStart] : '';\n        let newInputValue: string = '';\n        if (this.hiddenInput !== undefined) {\n            let actualResult: string[] = this.actualValue.split('');\n            inputValue !== '' && actualResult.length\n                ? typeof this.selStart === 'number' && typeof this.selEnd === 'number'\n                    ? inputValue.length > actualResult.length\n                        ? actualResult.splice(this.selStart, 0, getSymbol)\n                        : inputValue.length < actualResult.length\n                        ? actualResult.length - inputValue.length === 1\n                            ? actualResult.splice(this.selStart - 1, 1)\n                            : actualResult.splice(this.selStart, this.selEnd - this.selStart)\n                        : null\n                    : null\n                : (actualResult = []);\n            newInputValue = this.actualValue.length ? this.shiftTypedSymbols(actualResult.join('')) : inputValue;\n        }\n        newInputValue = Boolean(newInputValue) && newInputValue.length ? newInputValue : inputValue;\n        const result: string = super.applyMask(newInputValue, maskExpression, position, cb);\n        this.actualValue = this.getActualValue(result);\n\n        if (\n            (this.maskExpression.startsWith(Separators.SEPARATOR) ||\n                this.maskExpression.startsWith(Separators.DOT_SEPARATOR)) &&\n            this.dropSpecialCharacters === true\n        ) {\n            this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item: string) => item !== ',');\n        }\n        if (this.maskExpression.startsWith(Separators.COMMA_SEPARATOR) && this.dropSpecialCharacters === true) {\n            this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item: string) => item !== '.');\n        }\n\n        this.formControlResult(result);\n\n        if (!this.showMaskTyped) {\n            if (this.hiddenInput) {\n                return result && result.length ? this.hideInput(result, this.maskExpression) : result;\n            }\n            return result;\n        }\n        const resLen: number = result.length;\n        const prefNmask: string = this.prefix + this.maskIsShown;\n        return result + (this.maskExpression === 'IP' ? prefNmask : prefNmask.slice(resLen));\n    }\n\n    public applyValueChanges(position: number = 0, cb: Function = () => {}): void {\n        this._formElement.value = this.applyMask(this._formElement.value, this.maskExpression, position, cb);\n        if (this._formElement === this.document.activeElement) {\n            return;\n        }\n        this.clearIfNotMatchFn();\n    }\n\n    public hideInput(inputValue: string, maskExpression: string): string {\n        return inputValue\n            .split('')\n            .map((curr: string, index: number) => {\n                if (\n                    this.maskAvailablePatterns &&\n                    this.maskAvailablePatterns[maskExpression[index]] &&\n                    this.maskAvailablePatterns[maskExpression[index]].symbol\n                ) {\n                    return this.maskAvailablePatterns[maskExpression[index]].symbol;\n                }\n                return curr;\n            })\n            .join('');\n    }\n\n    // this function is not necessary, it checks result against maskExpression\n    public getActualValue(res: string): string {\n        const compare: string[] = res\n            .split('')\n            .filter(\n                (symbol: string, i: number) =>\n                    this._checkSymbolMask(symbol, this.maskExpression[i]) ||\n                    (this.maskSpecialCharacters.includes(this.maskExpression[i]) && symbol === this.maskExpression[i])\n            );\n        if (compare.join('') === res) {\n            return compare.join('');\n        }\n        return res;\n    }\n\n    public shiftTypedSymbols(inputValue: string): string {\n        let symbolToReplace: string = '';\n        const newInputValue: string[] =\n            (inputValue &&\n                inputValue.split('').map((currSymbol: string, index: number) => {\n                    if (\n                        this.maskSpecialCharacters.includes(inputValue[index + 1]) &&\n                        inputValue[index + 1] !== this.maskExpression[index + 1]\n                    ) {\n                        symbolToReplace = currSymbol;\n                        return inputValue[index + 1];\n                    }\n                    if (symbolToReplace.length) {\n                        const replaceSymbol: string = symbolToReplace;\n                        symbolToReplace = '';\n                        return replaceSymbol;\n                    }\n                    return currSymbol;\n                })) ||\n            [];\n        return newInputValue.join('');\n    }\n\n    public showMaskInInput(inputVal?: string): string {\n        if (this.showMaskTyped && !!this.shownMaskExpression) {\n            if (this.maskExpression.length !== this.shownMaskExpression.length) {\n                throw new Error('Mask expression must match mask placeholder length');\n            } else {\n                return this.shownMaskExpression;\n            }\n        } else if (this.showMaskTyped) {\n            if (inputVal) {\n                return this._checkForIp(inputVal);\n            }\n            return this.maskExpression.replace(/\\w/g, '_');\n        }\n        return '';\n    }\n\n    public clearIfNotMatchFn(): void {\n        if (\n            this.clearIfNotMatch &&\n            this.prefix.length + this.maskExpression.length + this.suffix.length !== this._formElement.value.length\n        ) {\n            this.formElementProperty = ['value', ''];\n            this.applyMask(this._formElement.value, this.maskExpression);\n        }\n    }\n\n    public set formElementProperty([name, value]: [string, string | boolean]) {\n        this._renderer.setProperty(this._formElement, name, value);\n    }\n\n    public checkSpecialCharAmount(mask: string): number {\n        const chars: string[] = mask.split('').filter((item: string) => this._findSpecialChar(item));\n        return chars.length;\n    }\n\n    // tslint:disable-next-line: cyclomatic-complexity\n    private _checkForIp(inputVal: string): string {\n        if (inputVal === '#') {\n            return '_._._._';\n        }\n        const arr: string[] = [];\n        for (let i: number = 0; i < inputVal.length; i++) {\n            if (inputVal[i].match('\\\\d')) {\n                arr.push(inputVal[i]);\n            }\n        }\n        if (arr.length <= 3) {\n            return '_._._';\n        }\n        if (arr.length > 3 && arr.length <= 6) {\n            return '_._';\n        }\n        if (arr.length > 6 && arr.length <= 9) {\n            return '_';\n        }\n        if (arr.length > 9 && arr.length <= 12) {\n            return '';\n        }\n        return '';\n    }\n\n    private formControlResult(inputValue: string): void {\n        if (Array.isArray(this.dropSpecialCharacters)) {\n            this.onChange(\n                this._removeMask(this._removeSuffix(this._removePrefix(inputValue)), this.dropSpecialCharacters)\n            );\n        } else if (this.dropSpecialCharacters) {\n            this.onChange(this._checkSymbols(inputValue));\n        } else {\n            this.onChange(this._removeSuffix(this._removePrefix(inputValue)));\n        }\n    }\n\n    private _removeMask(value: string, specialCharactersForRemove: string[]): string {\n        return value ? value.replace(this._regExpForRemove(specialCharactersForRemove), '') : value;\n    }\n\n    private _removePrefix(value: string): string {\n        if (!this.prefix) {\n            return value;\n        }\n        return value ? value.replace(this.prefix, '') : value;\n    }\n\n    private _removeSuffix(value: string): string {\n        if (!this.suffix) {\n            return value;\n        }\n        return value ? value.replace(this.suffix, '') : value;\n    }\n\n    private _regExpForRemove(specialCharactersForRemove: string[]): RegExp {\n        return new RegExp(specialCharactersForRemove.map((item: string) => `\\\\${item}`).join('|'), 'gi');\n    }\n\n    private _checkSymbols(result: string): string | number | undefined | null {\n        // TODO should simplify this code\n        let separatorValue: number | null = this.testFn(Separators.SEPARATOR, this.maskExpression);\n        if (separatorValue && this.isNumberValue) {\n            // tslint:disable-next-line:max-line-length\n            return result === ''\n                ? result\n                : result === ','\n                ? null\n                : Number(\n                      this._removeMask(\n                          this._removeSuffix(this._removePrefix(result)),\n                          this.maskSpecialCharacters\n                      ).replace(',', '.')\n                  );\n        }\n        separatorValue = this.testFn(Separators.DOT_SEPARATOR, this.maskExpression);\n        if (separatorValue && this.isNumberValue) {\n            // tslint:disable-next-line:max-line-length\n            return result === ''\n                ? result\n                : result === ','\n                ? null\n                : Number(\n                      this._removeMask(\n                          this._removeSuffix(this._removePrefix(result)),\n                          this.maskSpecialCharacters\n                      ).replace(',', '.')\n                  );\n        }\n        separatorValue = this.testFn(Separators.COMMA_SEPARATOR, this.maskExpression);\n        if (separatorValue && this.isNumberValue) {\n            // tslint:disable-next-line:max-line-length\n            return result === ''\n                ? result\n                : result === '.'\n                ? null\n                : Number(this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters));\n        }\n        if (this.isNumberValue) {\n            return result === ''\n                ? result\n                : Number(this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters));\n        } else if (\n            this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters).indexOf(\n                ','\n            ) !== -1\n        ) {\n            return this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters).replace(\n                ',',\n                '.'\n            );\n        } else {\n            return this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters);\n        }\n    }\n\n    // TODO should think about helpers\n    private testFn(baseSeparator: string, maskExpretion: string): number | null {\n        const matcher: RegExpMatchArray | null = maskExpretion.match(new RegExp(`^${baseSeparator}\\\\.([^d]*)`));\n        return matcher ? Number(matcher[1]) : null;\n    }\n}\n","import { Directive, forwardRef, HostListener, Inject, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors } from '@angular/forms';\nimport { MaskService } from './mask.service';\nimport { IConfig, withoutValidation } from './config';\nimport { CustomKeyboardEvent } from './custom-keyboard-event';\n\n@Directive({\n    selector: '[mask]',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => MaskDirective),\n            multi: true,\n        },\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => MaskDirective),\n            multi: true,\n        },\n        MaskService,\n    ],\n})\nexport class MaskDirective implements ControlValueAccessor, OnChanges {\n    @Input('mask') public maskExpression: string = '';\n    @Input() public specialCharacters: IConfig['specialCharacters'] = [];\n    @Input() public patterns: IConfig['patterns'] = {};\n    @Input() public prefix: IConfig['prefix'] = '';\n    @Input() public suffix: IConfig['suffix'] = '';\n    @Input() public dropSpecialCharacters: IConfig['dropSpecialCharacters'] | null = null;\n    @Input() public hiddenInput: IConfig['hiddenInput'] | null = null;\n    @Input() public showMaskTyped: IConfig['showMaskTyped'] | null = null;\n    @Input() public shownMaskExpression: IConfig['shownMaskExpression'] | null = null;\n    @Input() public showTemplate: IConfig['showTemplate'] | null = null;\n    @Input() public clearIfNotMatch: IConfig['clearIfNotMatch'] | null = null;\n    @Input() public validation: IConfig['validation'] | null = null;\n    private _maskValue!: string;\n    private _inputValue!: string;\n    private _position: number | null = null;\n    // tslint:disable-next-line\n    private _start!: number;\n    private _end!: number;\n    private _code!: string;\n    // tslint:disable-next-line\n    public onChange = (_: any) => {};\n    public onTouch = () => {};\n\n    public constructor(\n        // tslint:disable-next-line\n        @Inject(DOCUMENT) private document: any,\n        private _maskService: MaskService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        // tslint:disable-next-line:max-line-length\n        const {\n            maskExpression,\n            specialCharacters,\n            patterns,\n            prefix,\n            suffix,\n            dropSpecialCharacters,\n            hiddenInput,\n            showMaskTyped,\n            shownMaskExpression,\n            showTemplate,\n            clearIfNotMatch,\n            validation,\n        } = changes;\n        if (maskExpression) {\n            this._maskValue = changes.maskExpression.currentValue || '';\n        }\n        if (specialCharacters) {\n            if (\n                !specialCharacters.currentValue ||\n                !Array.isArray(specialCharacters.currentValue) ||\n                (Array.isArray(specialCharacters.currentValue) && !specialCharacters.currentValue.length)\n            ) {\n                return;\n            }\n            this._maskService.maskSpecialCharacters = changes.specialCharacters.currentValue || '';\n        }\n        if (patterns) {\n            this._maskService.maskAvailablePatterns = patterns.currentValue;\n        }\n        if (prefix) {\n            this._maskService.prefix = prefix.currentValue;\n        }\n        if (suffix) {\n            this._maskService.suffix = suffix.currentValue;\n        }\n        if (dropSpecialCharacters) {\n            this._maskService.dropSpecialCharacters = dropSpecialCharacters.currentValue;\n        }\n        if (hiddenInput) {\n            this._maskService.hiddenInput = hiddenInput.currentValue;\n        }\n        if (showMaskTyped) {\n            this._maskService.showMaskTyped = showMaskTyped.currentValue;\n        }\n        if (shownMaskExpression) {\n            this._maskService.shownMaskExpression = shownMaskExpression.currentValue;\n        }\n        if (showTemplate) {\n            this._maskService.showTemplate = showTemplate.currentValue;\n        }\n        if (clearIfNotMatch) {\n            this._maskService.clearIfNotMatch = clearIfNotMatch.currentValue;\n        }\n        if (validation) {\n            this._maskService.validation = validation.currentValue;\n        }\n        this._applyMask();\n    }\n\n    // tslint:disable-next-line: cyclomatic-complexity\n    public validate({ value }: FormControl): ValidationErrors | null {\n        if (!this._maskService.validation) {\n            return null;\n        }\n        if (this._maskService.ipError) {\n            return { 'Mask error': true };\n        }\n        if (this._maskValue.startsWith('dot_separator') || this._maskValue.startsWith('comma_separator')) {\n            return null;\n        }\n        if (withoutValidation.includes(this._maskValue)) {\n            return null;\n        }\n        if (this._maskService.clearIfNotMatch) {\n            return null;\n        }\n        if (value && value.toString().length >= 1) {\n            let counterOfOpt: number = 0;\n            for (const key in this._maskService.maskAvailablePatterns) {\n                if (\n                    this._maskService.maskAvailablePatterns[key].optional &&\n                    this._maskService.maskAvailablePatterns[key].optional === true\n                ) {\n                    if (this._maskValue.indexOf(key) !== this._maskValue.lastIndexOf(key)) {\n                        const opt: string = this._maskValue\n                            .split('')\n                            .filter((i: string) => i === key)\n                            .join('');\n                        counterOfOpt += opt.length;\n                    } else if (this._maskValue.indexOf(key) !== -1) {\n                        counterOfOpt++;\n                    }\n                    if (\n                        this._maskValue.indexOf(key) !== -1 &&\n                        value.toString().length >= this._maskValue.indexOf(key)\n                    ) {\n                        return null;\n                    }\n                    if (counterOfOpt === this._maskValue.length) {\n                        return null;\n                    }\n                }\n            }\n            if (\n                this._maskValue.indexOf('*') === 1 ||\n                this._maskValue.indexOf('?') === 1 ||\n                this._maskValue.indexOf('{') === 1\n            ) {\n                return null;\n            } else if (\n                (this._maskValue.indexOf('*') > 1 && value.toString().length < this._maskValue.indexOf('*')) ||\n                (this._maskValue.indexOf('?') > 1 && value.toString().length < this._maskValue.indexOf('?'))\n            ) {\n                return { 'Mask error': true };\n            }\n            if (this._maskValue.indexOf('*') === -1 || this._maskValue.indexOf('?') === -1) {\n                const length: number = this._maskService.dropSpecialCharacters\n                    ? this._maskValue.length - this._maskService.checkSpecialCharAmount(this._maskValue) - counterOfOpt\n                    : this._maskValue.length - counterOfOpt;\n                if (value.toString().length < length) {\n                    return { 'Mask error': true };\n                }\n            }\n        }\n        return null;\n    }\n\n    @HostListener('input', ['$event'])\n    public onInput(e: CustomKeyboardEvent): void {\n        const el: HTMLInputElement = e.target as HTMLInputElement;\n        this._inputValue = el.value;\n        if (!this._maskValue) {\n            this.onChange(el.value);\n            return;\n        }\n        const position: number =\n            el.selectionStart === 1\n                ? (el.selectionStart as number) + this._maskService.prefix.length\n                : (el.selectionStart as number);\n        let caretShift: number = 0;\n        let backspaceShift: boolean = false;\n        this._maskService.applyValueChanges(position, (shift: number, _backspaceShift: boolean) => {\n            caretShift = shift;\n            backspaceShift = _backspaceShift;\n        });\n        // only set the selection if the element is active\n        if (this.document.activeElement !== el) {\n            return;\n        }\n        this._position = this._position === 1 && this._inputValue.length === 1 ? null : this._position;\n        el.selectionStart = el.selectionEnd =\n            this._position !== null\n                ? this._position\n                : position +\n                  // tslint:disable-next-line\n                  (this._code === 'Backspace' && !backspaceShift ? 0 : caretShift);\n        this._position = null;\n    }\n\n    @HostListener('blur')\n    public onBlur(): void {\n        this._maskService.clearIfNotMatchFn();\n        this.onTouch();\n    }\n\n    @HostListener('click', ['$event'])\n    public onFocus(e: MouseEvent | CustomKeyboardEvent): void {\n        const el: HTMLInputElement = e.target as HTMLInputElement;\n        const posStart: number = 0;\n        const posEnd: number = 0;\n        if (\n            el !== null &&\n            el.selectionStart !== null &&\n            el.selectionStart === el.selectionEnd &&\n            el.selectionStart > this._maskService.prefix.length &&\n            // tslint:disable-next-line\n            (e as any).keyCode !== 38\n        )\n            if (this._maskService.showMaskTyped) {\n                // ) {\n                //     return;\n                // }\n                this._maskService.maskIsShown = this._maskService.showMaskInInput();\n                if (el.setSelectionRange && this._maskService.prefix + this._maskService.maskIsShown === el.value) {\n                    el.focus();\n                    el.setSelectionRange(posStart, posEnd);\n                } else if (el.setSelectionRange && this._maskService.maskIsShown !== el.value) {\n                    el.focus();\n                    el.setSelectionRange(posStart, posEnd);\n                }\n                if (this._inputValue.match('[wÐ°-ÑÐ-Ð¯]') || this._inputValue.match('[a-z]|[A-Z]')) {\n                    posStart;\n                }\n            }\n        el.value =\n            !el.value || el.value === this._maskService.prefix\n                ? this._maskService.prefix + this._maskService.maskIsShown\n                : el.value;\n        /** fix of cursor position with prefix when mouse click occur */\n        if (((el.selectionStart as number) || (el.selectionEnd as number)) <= this._maskService.prefix.length) {\n            el.selectionStart = this._maskService.prefix.length;\n            return;\n        }\n    }\n\n    @HostListener('keydown', ['$event'])\n    public a(e: CustomKeyboardEvent): void {\n        this._code = e.code ? e.code : e.key;\n        const el: HTMLInputElement = e.target as HTMLInputElement;\n        this._maskService.selStart = el.selectionStart;\n        this._maskService.selEnd = el.selectionEnd;\n        if (e.keyCode === 38) {\n            e.preventDefault();\n        }\n        if (e.keyCode === 37 || e.keyCode === 8) {\n            if (e.keyCode === 37) {\n                el.selectionStart = (el.selectionEnd as number) - 1;\n            }\n            if (e.keyCode === 8 && el.value.length === 0) {\n                el.selectionStart = el.selectionEnd;\n            }\n            if (\n                (el.selectionStart as number) <= this._maskService.prefix.length &&\n                (el.selectionEnd as number) <= this._maskService.prefix.length\n            ) {\n                e.preventDefault();\n            }\n            const cursorStart: number | null = el.selectionStart;\n            // this.onFocus(e);\n            if (e.keyCode === 8 && cursorStart === 0 && el.selectionEnd === el.value.length && el.value.length !== 0) {\n                this._position = this._maskService.prefix ? this._maskService.prefix.length : 0;\n                this._maskService.applyMask(this._maskService.prefix, this._maskService.maskExpression, this._position);\n            }\n        }\n    }\n\n    @HostListener('paste')\n    public onPaste(): void {\n        this._position = Number.MAX_SAFE_INTEGER;\n    }\n\n    /** It writes the value in the input */\n    public async writeValue(inputValue: string | number): Promise<void> {\n        if (inputValue === undefined) {\n            inputValue = '';\n        }\n        if (typeof inputValue === 'number') {\n            inputValue = String(inputValue);\n            inputValue = this._maskValue.startsWith('dot_separator') ? inputValue.replace('.', ',') : inputValue;\n            this._maskService.isNumberValue = true;\n        }\n        (inputValue && this._maskService.maskExpression) ||\n        (this._maskService.maskExpression && (this._maskService.prefix || this._maskService.showMaskTyped))\n            ? (this._maskService.formElementProperty = [\n                  'value',\n                  this._maskService.applyMask(inputValue, this._maskService.maskExpression),\n              ])\n            : (this._maskService.formElementProperty = ['value', inputValue]);\n        this._inputValue = inputValue;\n    }\n\n    // tslint:disable-next-line\n    public registerOnChange(fn: any): void {\n        this.onChange = fn;\n        this._maskService.onChange = this.onChange;\n    }\n\n    // tslint:disable-next-line\n    public registerOnTouched(fn: any): void {\n        this.onTouch = fn;\n    }\n\n    /** It disables the input element */\n    public setDisabledState(isDisabled: boolean): void {\n        this._maskService.formElementProperty = ['disabled', isDisabled];\n    }\n\n    private _repeatPatternSymbols(maskExp: string): string {\n        return (\n            (maskExp.match(/{[0-9]+}/) &&\n                maskExp.split('').reduce((accum: string, currval: string, index: number): string => {\n                    this._start = currval === '{' ? index : this._start;\n\n                    if (currval !== '}') {\n                        return this._maskService._findSpecialChar(currval) ? accum + currval : accum;\n                    }\n                    this._end = index;\n                    const repeatNumber: number = Number(maskExp.slice(this._start + 1, this._end));\n                    const repaceWith: string = new Array(repeatNumber + 1).join(maskExp[this._start - 1]);\n                    return accum + repaceWith;\n                }, '')) ||\n            maskExp\n        );\n    }\n    // tslint:disable-next-line:no-any\n    private _applyMask(): any {\n        this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue || '');\n        this._maskService.formElementProperty = [\n            'value',\n            this._maskService.applyMask(this._inputValue, this._maskService.maskExpression),\n        ];\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { MaskApplierService } from './mask-applier.service';\nimport { IConfig } from './config';\n\n@Pipe({\n    name: 'mask',\n    pure: true,\n})\nexport class MaskPipe implements PipeTransform {\n    public constructor(private _maskService: MaskApplierService) {}\n\n    public transform(value: string | number, mask: string | [string, IConfig['patterns']]): string {\n        if (!value && typeof value !== 'number') {\n            return '';\n        }\n        if (typeof mask === 'string') {\n            return this._maskService.applyMask(`${value}`, mask);\n        }\n        return this._maskService.applyMaskWithPattern(`${value}`, mask);\n    }\n}\n","import { config, INITIAL_CONFIG, initialConfig, NEW_CONFIG, optionsConfig } from './config';\nimport { MaskApplierService } from './mask-applier.service';\nimport { MaskDirective } from './mask.directive';\nimport { MaskPipe } from './mask.pipe';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\n@NgModule({\n    exports: [MaskDirective, MaskPipe],\n    declarations: [MaskDirective, MaskPipe],\n})\nexport class NgxMaskModule {\n    public static forRoot(configValue?: optionsConfig | (() => optionsConfig)): ModuleWithProviders {\n        return {\n            ngModule: NgxMaskModule,\n            providers: [\n                {\n                    provide: NEW_CONFIG,\n                    useValue: configValue,\n                },\n                {\n                    provide: INITIAL_CONFIG,\n                    useValue: initialConfig,\n                },\n                {\n                    provide: config,\n                    useFactory: _configFactory,\n                    deps: [INITIAL_CONFIG, NEW_CONFIG],\n                },\n                MaskApplierService,\n            ],\n        };\n    }\n    public static forChild(_configValue?: optionsConfig): ModuleWithProviders {\n        return {\n            ngModule: NgxMaskModule,\n        };\n    }\n}\n\n/**\n * @internal\n */\nexport function _configFactory(\n    initConfig: optionsConfig,\n    configValue: optionsConfig | (() => optionsConfig)\n): optionsConfig {\n    return configValue instanceof Function ? { ...initConfig, ...configValue() } : { ...initConfig, ...configValue };\n}\n"]}