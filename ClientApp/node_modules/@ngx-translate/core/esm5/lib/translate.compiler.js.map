{"version":3,"file":"translate.compiler.js","sources":["@ngx-translate/core/projects/ngx-translate/core/src/lib/translate.compiler.ts"],"names":[],"mappings":";;;;AAAA;AAAI,GAAG,EAAC,UAAU,EAAC,MAAM,eAAe,CAAC;AAEtC;AAAI;AAAP;;AAAI,EAAE,DAIL;AAG6C;AAAmC;AAAM;AAGvF;AAAM;AAA8B;AACH;AAAQ;AAAiB;AAG1D;AACsB;AAAmB;AAAQ;AAIvB;AAAQ;AAAiB;AAA+B;AAAuB;AAAmB;AAT5H,MAAM,4BAA6B,SAAQ,iBAAiB;AAClC;AAAE;AAAI;AAIgB;AAAI;AAI9B,IARpB,OAAO,CAAC,KAAa,EAAE,IAAY;AAC7B,QAAJ,MAAM,CAAC,KAAK,CAAC;AAGL,KAFT;AAGC;AAAM;AAAQ;AAGP;AAAuB;AAAmB,IAJnD;AAAI,eAAe,CAAC,YAAiB,EAAE,IAAY,1BACjD,MAAM,CAAC,YAAY,CAAC;AAGY,KAFjC;AAEW;AAAO;AAAQ,YAV5B,UAAU;AACL;AAAuB;AAAmB;AAAQ;AAKxD;AAA6B;;;;;0BAAM;AAAC;AAC5B;AAGR,iCAAmG;AAAC;AAAgE;AAA0E;AAAsC;AAAQ;AAAmB;AAAoI;AAAQ;AAA0C;AAAE","sourcesContent":["import {Injectable} from \"@angular/core\";\n\nexport abstract class TranslateCompiler {\n  abstract compile(value: string, lang: string): string | Function;\n\n  abstract compileTranslations(translations: any, lang: string): any;\n}\n\n/**\n * This compiler is just a placeholder that does nothing, in case you don't need a compiler at all\n */\n@Injectable()\nexport class TranslateFakeCompiler extends TranslateCompiler {\n  compile(value: string, lang: string): string | Function {\n    return value;\n  }\n\n  compileTranslations(translations: any, lang: string): any {\n    return translations;\n  }\n}\n"]}