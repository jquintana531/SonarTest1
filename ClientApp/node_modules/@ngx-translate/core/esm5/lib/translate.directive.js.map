{"version":3,"file":"translate.directive.js","sources":["@ngx-translate/core/projects/ngx-translate/core/src/lib/translate.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {AfterViewChecked, ChangeDetectorRef, Directive, ElementRef, Input, OnDestroy} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {DefaultLangChangeEvent, LangChangeEvent, TranslateService, TranslationChangeEvent} from './translate.service';\nimport {equals, isDefined} from './util';\n\n@Directive({\n  selector: '[translate],[ngx-translate]'\n})\nexport class TranslateDirective implements AfterViewChecked, OnDestroy {\n  key: string;\n  lastParams: any;\n  currentParams: any;\n  onLangChangeSub: Subscription;\n  onDefaultLangChangeSub: Subscription;\n  onTranslationChangeSub: Subscription;\n\n  @Input() set translate(key: string) {\n    if (key) {\n      this.key = key;\n      this.checkNodes();\n    }\n  }\n\n  @Input() set translateParams(params: any) {\n    if (!equals(this.currentParams, params)) {\n      this.currentParams = params;\n      this.checkNodes(true);\n    }\n  }\n\n  constructor(private translateService: TranslateService, private element: ElementRef, private _ref: ChangeDetectorRef) {\n    // subscribe to onTranslationChange event, in case the translations of the current lang change\n    if (!this.onTranslationChangeSub) {\n      this.onTranslationChangeSub = this.translateService.onTranslationChange.subscribe((event: TranslationChangeEvent) => {\n        if (event.lang === this.translateService.currentLang) {\n          this.checkNodes(true, event.translations);\n        }\n      });\n    }\n\n    // subscribe to onLangChange event, in case the language changes\n    if (!this.onLangChangeSub) {\n      this.onLangChangeSub = this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n        this.checkNodes(true, event.translations);\n      });\n    }\n\n    // subscribe to onDefaultLangChange event, in case the default language changes\n    if (!this.onDefaultLangChangeSub) {\n      this.onDefaultLangChangeSub = this.translateService.onDefaultLangChange.subscribe((event: DefaultLangChangeEvent) => {\n        this.checkNodes(true);\n      });\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.checkNodes();\n  }\n\n  checkNodes(forceUpdate = false, translations?: any) {\n    let nodes: NodeList = this.element.nativeElement.childNodes;\n    // if the element is empty\n    if (!nodes.length) {\n      // we add the key as content\n      this.setContent(this.element.nativeElement, this.key);\n      nodes = this.element.nativeElement.childNodes;\n    }\n    for (let i = 0; i < nodes.length; ++i) {\n      let node: any = nodes[i];\n      if (node.nodeType === 3) { // node type 3 is a text node\n        let key: string;\n        if (this.key) {\n          key = this.key;\n          if (forceUpdate) {\n            node.lastKey = null;\n          }\n        } else {\n          let content = this.getContent(node);\n          let trimmedContent = content.trim();\n          if (trimmedContent.length) {\n            // we want to use the content as a key, not the translation value\n            if (content !== node.currentValue) {\n              key = trimmedContent;\n              // the content was changed from the user, we'll use it as a reference if needed\n              node.originalContent = this.getContent(node);\n            } else if (node.originalContent && forceUpdate) { // the content seems ok, but the lang has changed\n              node.lastKey = null;\n              // the current content is the translation, not the key, use the last real content as key\n              key = node.originalContent.trim();\n            }\n          }\n        }\n        this.updateValue(key, node, translations);\n      }\n    }\n  }\n\n  updateValue(key: string, node: any, translations: any) {\n    if (key) {\n      if (node.lastKey === key && this.lastParams === this.currentParams) {\n        return;\n      }\n\n      this.lastParams = this.currentParams;\n\n      let onTranslation = (res: string) => {\n        if (res !== key) {\n          node.lastKey = key;\n        }\n        if (!node.originalContent) {\n          node.originalContent = this.getContent(node);\n        }\n        node.currentValue = isDefined(res) ? res : (node.originalContent || key);\n        // we replace in the original content to preserve spaces that we might have trimmed\n        this.setContent(node, this.key ? node.currentValue : node.originalContent.replace(key, node.currentValue));\n        this._ref.markForCheck();\n      };\n\n      if (isDefined(translations)) {\n        let res = this.translateService.getParsedResult(translations, key, this.currentParams);\n        if (typeof res.subscribe === \"function\") {\n          res.subscribe(onTranslation);\n        } else {\n          onTranslation(res);\n        }\n      } else {\n        this.translateService.get(key, this.currentParams).subscribe(onTranslation);\n      }\n    }\n  }\n\n  getContent(node: any): string {\n    return isDefined(node.textContent) ? node.textContent : node.data;\n  }\n\n  setContent(node: any, content: string): void {\n    if (isDefined(node.textContent)) {\n      node.textContent = content;\n    } else {\n      node.data = content;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.onLangChangeSub) {\n      this.onLangChangeSub.unsubscribe();\n    }\n\n    if (this.onDefaultLangChangeSub) {\n      this.onDefaultLangChangeSub.unsubscribe();\n    }\n\n    if (this.onTranslationChangeSub) {\n      this.onTranslationChangeSub.unsubscribe();\n    }\n  }\n}\n"]}