{"version":3,"file":"translate.loader.js","sources":["@ngx-translate/core/projects/ngx-translate/core/src/lib/translate.loader.ts"],"names":[],"mappings":";;;;AAAA;AAAI,GAAG,EAAC,UAAU,EAAC,MAAM,eAAe,CAAC,vCACzC,OAAO,EAAa,EAAE,EAAC,MAAM,MAAM,CAAC;AAEpB;AACb;AAAI;AADP;;AAAI,EAAE,DAEL;AAG2C;AAAiC;AAAM;AAEvE;AACR;AAA4B;AACD;AAAQ;AACjC;AAGF;AAAmB;AALvB,MAAM,0BAA2B,SAAQ,eAAe;AAC/C;AAAE;AAAI;AAIoB;AAAI,IAJrC,cAAc,CAAC,IAAY;AACZ,QAAb,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAGK,KAFpB;AAE0B;AAAyE;AAAM;AAAQ,IANnH,UAAU;AACL;AAAmB;AAAQ;AACU;AAC3B;;;;;0BACb;AACH;AAC8B;AAAqB,+BAA+F;AAAC;AAA8D;AAA0E;AAAoC;AAAQ;AAAmB;AAAoI;AAAQ;AAAwC;AAAE","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Observable, of} from \"rxjs\";\n\nexport abstract class TranslateLoader {\n  abstract getTranslation(lang: string): Observable<any>;\n}\n\n/**\n * This loader is just a placeholder that does nothing, in case you don't need a loader at all\n */\n@Injectable()\nexport class TranslateFakeLoader extends TranslateLoader {\n  getTranslation(lang: string): Observable<any> {\n    return of({});\n  }\n}\n"]}