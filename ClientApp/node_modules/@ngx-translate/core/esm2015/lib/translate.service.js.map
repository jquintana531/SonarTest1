{"version":3,"file":"translate.service.js","sources":["@ngx-translate/core/projects/ngx-translate/core/src/lib/translate.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {EventEmitter, Inject, Injectable, InjectionToken} from \"@angular/core\";\nimport {concat, merge, Observable, Observer, of} from \"rxjs\";\nimport {map, share, switchMap, take, toArray} from \"rxjs/operators\";\nimport {MissingTranslationHandler, MissingTranslationHandlerParams} from \"./missing-translation-handler\";\nimport {TranslateCompiler} from \"./translate.compiler\";\nimport {TranslateLoader} from \"./translate.loader\";\nimport {TranslateParser} from \"./translate.parser\";\n\nimport {TranslateStore} from \"./translate.store\";\nimport {isDefined, mergeDeep} from \"./util\";\n\nexport const USE_STORE = new InjectionToken<string>('USE_STORE');\nexport const USE_DEFAULT_LANG = new InjectionToken<string>('USE_DEFAULT_LANG');\n\nexport interface TranslationChangeEvent {\n  translations: any;\n  lang: string;\n}\n\nexport interface LangChangeEvent {\n  lang: string;\n  translations: any;\n}\n\nexport interface DefaultLangChangeEvent {\n  lang: string;\n  translations: any;\n}\n\ndeclare interface Window {\n  navigator: any;\n}\n\ndeclare const window: Window;\n\n@Injectable()\nexport class TranslateService {\n  private loadingTranslations: Observable<any>;\n  private pending: boolean = false;\n  private _onTranslationChange: EventEmitter<TranslationChangeEvent> = new EventEmitter<TranslationChangeEvent>();\n  private _onLangChange: EventEmitter<LangChangeEvent> = new EventEmitter<LangChangeEvent>();\n  private _onDefaultLangChange: EventEmitter<DefaultLangChangeEvent> = new EventEmitter<DefaultLangChangeEvent>();\n  private _defaultLang: string;\n  private _currentLang: string;\n  private _langs: Array<string> = [];\n  private _translations: any = {};\n  private _translationRequests: any = {};\n\n  /**\n   * An EventEmitter to listen to translation change events\n   * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\n     *     // do something\n     * });\n   */\n  get onTranslationChange(): EventEmitter<TranslationChangeEvent> {\n    return this.isolate ? this._onTranslationChange : this.store.onTranslationChange;\n  }\n\n  /**\n   * An EventEmitter to listen to lang change events\n   * onLangChange.subscribe((params: LangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  get onLangChange(): EventEmitter<LangChangeEvent> {\n    return this.isolate ? this._onLangChange : this.store.onLangChange;\n  }\n\n  /**\n   * An EventEmitter to listen to default lang change events\n   * onDefaultLangChange.subscribe((params: DefaultLangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  get onDefaultLangChange() {\n    return this.isolate ? this._onDefaultLangChange : this.store.onDefaultLangChange;\n  }\n\n  /**\n   * The default lang to fallback when translations are missing on the current lang\n   */\n  get defaultLang(): string {\n    return this.isolate ? this._defaultLang : this.store.defaultLang;\n  }\n\n  set defaultLang(defaultLang: string) {\n    if (this.isolate) {\n      this._defaultLang = defaultLang;\n    } else {\n      this.store.defaultLang = defaultLang;\n    }\n  }\n\n  /**\n   * The lang currently used\n   */\n  get currentLang(): string {\n    return this.isolate ? this._currentLang : this.store.currentLang;\n  }\n\n  set currentLang(currentLang: string) {\n    if (this.isolate) {\n      this._currentLang = currentLang;\n    } else {\n      this.store.currentLang = currentLang;\n    }\n  }\n\n  /**\n   * an array of langs\n   */\n  get langs(): string[] {\n    return this.isolate ? this._langs : this.store.langs;\n  }\n\n  set langs(langs: string[]) {\n    if (this.isolate) {\n      this._langs = langs;\n    } else {\n      this.store.langs = langs;\n    }\n  }\n\n  /**\n   * a list of translations per lang\n   */\n  get translations(): any {\n    return this.isolate ? this._translations : this.store.translations;\n  }\n\n  set translations(translations: any) {\n    if (this.isolate) {\n      this._translations = translations;\n    } else {\n      this.store.translations = translations;\n    }\n  }\n\n  /**\n   *\n   * @param store an instance of the store (that is supposed to be unique)\n   * @param currentLoader An instance of the loader currently used\n   * @param compiler An instance of the compiler currently used\n   * @param parser An instance of the parser currently used\n   * @param missingTranslationHandler A handler for missing translations.\n   * @param isolate whether this service should use the store or not\n   * @param useDefaultLang whether we should use default language translation when current language translation is missing.\n   */\n  constructor(public store: TranslateStore,\n              public currentLoader: TranslateLoader,\n              public compiler: TranslateCompiler,\n              public parser: TranslateParser,\n              public missingTranslationHandler: MissingTranslationHandler,\n              @Inject(USE_DEFAULT_LANG) private useDefaultLang: boolean = true,\n              @Inject(USE_STORE) private isolate: boolean = false) {\n  }\n\n  /**\n   * Sets the default language to use as a fallback\n   */\n  public setDefaultLang(lang: string): void {\n    if (lang === this.defaultLang) {\n      return;\n    }\n\n    let pending: Observable<any> = this.retrieveTranslations(lang);\n\n    if (typeof pending !== \"undefined\") {\n      // on init set the defaultLang immediately\n      if (!this.defaultLang) {\n        this.defaultLang = lang;\n      }\n\n      pending.pipe(take(1))\n        .subscribe((res: any) => {\n          this.changeDefaultLang(lang);\n        });\n    } else { // we already have this language\n      this.changeDefaultLang(lang);\n    }\n  }\n\n  /**\n   * Gets the default language used\n   */\n  public getDefaultLang(): string {\n    return this.defaultLang;\n  }\n\n  /**\n   * Changes the lang currently used\n   */\n  public use(lang: string): Observable<any> {\n    // don't change the language if the language given is already selected\n    if (lang === this.currentLang) {\n      return of(this.translations[lang]);\n    }\n\n    let pending: Observable<any> = this.retrieveTranslations(lang);\n\n    if (typeof pending !== \"undefined\") {\n      // on init set the currentLang immediately\n      if (!this.currentLang) {\n        this.currentLang = lang;\n      }\n\n      pending.pipe(take(1))\n        .subscribe((res: any) => {\n          this.changeLang(lang);\n        });\n\n      return pending;\n    } else { // we have this language, return an Observable\n      this.changeLang(lang);\n\n      return of(this.translations[lang]);\n    }\n  }\n\n  /**\n   * Retrieves the given translations\n   */\n  private retrieveTranslations(lang: string): Observable<any> {\n    let pending: Observable<any>;\n\n    // if this language is unavailable, ask for it\n    if (typeof this.translations[lang] === \"undefined\") {\n      this._translationRequests[lang] = this._translationRequests[lang] || this.getTranslation(lang);\n      pending = this._translationRequests[lang];\n    }\n\n    return pending;\n  }\n\n  /**\n   * Gets an object of translations for a given language with the current loader\n   * and passes it through the compiler\n   */\n  public getTranslation(lang: string): Observable<any> {\n    this.pending = true;\n    this.loadingTranslations = this.currentLoader.getTranslation(lang).pipe(share());\n\n    this.loadingTranslations.pipe(take(1))\n      .subscribe((res: Object) => {\n        this.translations[lang] = this.compiler.compileTranslations(res, lang);\n        this.updateLangs();\n        this.pending = false;\n      }, (err: any) => {\n        this.pending = false;\n      });\n\n    return this.loadingTranslations;\n  }\n\n  /**\n   * Manually sets an object of translations for a given language\n   * after passing it through the compiler\n   */\n  public setTranslation(lang: string, translations: Object, shouldMerge: boolean = false): void {\n    translations = this.compiler.compileTranslations(translations, lang);\n    if (shouldMerge && this.translations[lang]) {\n      this.translations[lang] = mergeDeep(this.translations[lang], translations);\n    } else {\n      this.translations[lang] = translations;\n    }\n    this.updateLangs();\n    this.onTranslationChange.emit({lang: lang, translations: this.translations[lang]});\n  }\n\n  /**\n   * Returns an array of currently available langs\n   */\n  public getLangs(): Array<string> {\n    return this.langs;\n  }\n\n  /**\n   * Add available langs\n   */\n  public addLangs(langs: Array<string>): void {\n    langs.forEach((lang: string) => {\n      if (this.langs.indexOf(lang) === -1) {\n        this.langs.push(lang);\n      }\n    });\n  }\n\n  /**\n   * Update the list of available langs\n   */\n  private updateLangs(): void {\n    this.addLangs(Object.keys(this.translations));\n  }\n\n  /**\n   * Returns the parsed result of the translations\n   */\n  public getParsedResult(translations: any, key: any, interpolateParams?: Object): any {\n    let res: string | Observable<string>;\n\n    if (key instanceof Array) {\n      let result: any = {},\n        observables: boolean = false;\n      for (let k of key) {\n        result[k] = this.getParsedResult(translations, k, interpolateParams);\n        if (typeof result[k].subscribe === \"function\") {\n          observables = true;\n        }\n      }\n      if (observables) {\n        let mergedObs: Observable<string>;\n        for (let k of key) {\n          let obs = typeof result[k].subscribe === \"function\" ? result[k] : of(result[k] as string);\n          if (typeof mergedObs === \"undefined\") {\n            mergedObs = obs;\n          } else {\n            mergedObs = merge(mergedObs, obs);\n          }\n        }\n        return mergedObs.pipe(\n          toArray(),\n          map((arr: Array<string>) => {\n            let obj: any = {};\n            arr.forEach((value: string, index: number) => {\n              obj[key[index]] = value;\n            });\n            return obj;\n          })\n        );\n      }\n      return result;\n    }\n\n    if (translations) {\n      res = this.parser.interpolate(this.parser.getValue(translations, key), interpolateParams);\n    }\n\n    if (typeof res === \"undefined\" && this.defaultLang && this.defaultLang !== this.currentLang && this.useDefaultLang) {\n      res = this.parser.interpolate(this.parser.getValue(this.translations[this.defaultLang], key), interpolateParams);\n    }\n\n    if (typeof res === \"undefined\") {\n      let params: MissingTranslationHandlerParams = {key, translateService: this};\n      if (typeof interpolateParams !== 'undefined') {\n        params.interpolateParams = interpolateParams;\n      }\n      res = this.missingTranslationHandler.handle(params);\n    }\n\n    return typeof res !== \"undefined\" ? res : key;\n  }\n\n  /**\n   * Gets the translated value of a key (or an array of keys)\n   * @returns the translated key, or an object of translated keys\n   */\n  public get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n    if (!isDefined(key) || !key.length) {\n      throw new Error(`Parameter \"key\" required`);\n    }\n    // check if we are loading a new translation to use\n    if (this.pending) {\n      return Observable.create((observer: Observer<string>) => {\n        let onComplete = (res: string) => {\n          observer.next(res);\n          observer.complete();\n        };\n        let onError = (err: any) => {\n          observer.error(err);\n        };\n        this.loadingTranslations.subscribe((res: any) => {\n          res = this.getParsedResult(this.compiler.compileTranslations(res, this.currentLang), key, interpolateParams);\n          if (typeof res.subscribe === \"function\") {\n            res.subscribe(onComplete, onError);\n          } else {\n            onComplete(res);\n          }\n        }, onError);\n      });\n    } else {\n      let res = this.getParsedResult(this.translations[this.currentLang], key, interpolateParams);\n      if (typeof res.subscribe === \"function\") {\n        return res;\n      } else {\n        return of(res);\n      }\n    }\n  }\n\n  /**\n   * Returns a stream of translated values of a key (or an array of keys) which updates\n   * whenever the language changes.\n   * @returns A stream of the translated key, or an object of translated keys\n   */\n  public stream(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n    if (!isDefined(key) || !key.length) {\n      throw new Error(`Parameter \"key\" required`);\n    }\n\n    return concat(\n      this.get(key, interpolateParams),\n      this.onLangChange.pipe(\n        switchMap((event: LangChangeEvent) => {\n          const res = this.getParsedResult(event.translations, key, interpolateParams);\n          if (typeof res.subscribe === \"function\") {\n            return res;\n          } else {\n            return of(res);\n          }\n        })\n      ));\n  }\n\n  /**\n   * Returns a translation instantly from the internal state of loaded translation.\n   * All rules regarding the current language, the preferred language of even fallback languages will be used except any promise handling.\n   */\n  public instant(key: string | Array<string>, interpolateParams?: Object): string | any {\n    if (!isDefined(key) || !key.length) {\n      throw new Error(`Parameter \"key\" required`);\n    }\n\n    let res = this.getParsedResult(this.translations[this.currentLang], key, interpolateParams);\n    if (typeof res.subscribe !== \"undefined\") {\n      if (key instanceof Array) {\n        let obj: any = {};\n        key.forEach((value: string, index: number) => {\n          obj[key[index]] = key[index];\n        });\n        return obj;\n      }\n      return key;\n    } else {\n      return res;\n    }\n  }\n\n  /**\n   * Sets the translated value of a key, after compiling it\n   */\n  public set(key: string, value: string, lang: string = this.currentLang): void {\n    this.translations[lang][key] = this.compiler.compile(value, lang);\n    this.updateLangs();\n    this.onTranslationChange.emit({lang: lang, translations: this.translations[lang]});\n  }\n\n  /**\n   * Changes the current lang\n   */\n  private changeLang(lang: string): void {\n    this.currentLang = lang;\n    this.onLangChange.emit({lang: lang, translations: this.translations[lang]});\n\n    // if there is no default lang, use the one that we just set\n    if (!this.defaultLang) {\n      this.changeDefaultLang(lang);\n    }\n  }\n\n  /**\n   * Changes the default lang\n   */\n  private changeDefaultLang(lang: string): void {\n    this.defaultLang = lang;\n    this.onDefaultLangChange.emit({lang: lang, translations: this.translations[lang]});\n  }\n\n  /**\n   * Allows to reload the lang file from the file\n   */\n  public reloadLang(lang: string): Observable<any> {\n    this.resetLang(lang);\n    return this.getTranslation(lang);\n  }\n\n  /**\n   * Deletes inner translation\n   */\n  public resetLang(lang: string): void {\n    this._translationRequests[lang] = undefined;\n    this.translations[lang] = undefined;\n  }\n\n  /**\n   * Returns the language code name from the browser, e.g. \"de\"\n   */\n  public getBrowserLang(): string {\n    if (typeof window === 'undefined' || typeof window.navigator === 'undefined') {\n      return undefined;\n    }\n\n    let browserLang: any = window.navigator.languages ? window.navigator.languages[0] : null;\n    browserLang = browserLang || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;\n\n    if (browserLang.indexOf('-') !== -1) {\n      browserLang = browserLang.split('-')[0];\n    }\n\n    if (browserLang.indexOf('_') !== -1) {\n      browserLang = browserLang.split('_')[0];\n    }\n\n    return browserLang;\n  }\n\n  /**\n   * Returns the culture language code name from the browser, e.g. \"de-DE\"\n   */\n  public getBrowserCultureLang(): string {\n    if (typeof window === 'undefined' || typeof window.navigator === 'undefined') {\n      return undefined;\n    }\n\n    let browserCultureLang: any = window.navigator.languages ? window.navigator.languages[0] : null;\n    browserCultureLang = browserCultureLang || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;\n\n    return browserCultureLang;\n  }\n}\n"]}