{"version":3,"file":"translate.pipe.js","sources":["@ngx-translate/core/projects/ngx-translate/core/src/lib/translate.pipe.ts"],"names":[],"mappings":"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","sourcesContent":["import {ChangeDetectorRef, EventEmitter, Injectable, OnDestroy, Pipe, PipeTransform} from '@angular/core';\nimport {DefaultLangChangeEvent, LangChangeEvent, TranslateService, TranslationChangeEvent} from './translate.service';\nimport {equals, isDefined} from './util';\n\n@Injectable()\n@Pipe({\n  name: 'translate',\n  pure: false // required to update the value when the promise is resolved\n})\nexport class TranslatePipe implements PipeTransform, OnDestroy {\n  value: string = '';\n  lastKey: string;\n  lastParams: any[];\n  onTranslationChange: EventEmitter<TranslationChangeEvent>;\n  onLangChange: EventEmitter<LangChangeEvent>;\n  onDefaultLangChange: EventEmitter<DefaultLangChangeEvent>;\n\n  constructor(private translate: TranslateService, private _ref: ChangeDetectorRef) {\n  }\n\n  updateValue(key: string, interpolateParams?: Object, translations?: any): void {\n    let onTranslation = (res: string) => {\n      this.value = res !== undefined ? res : key;\n      this.lastKey = key;\n      this._ref.markForCheck();\n    };\n    if (translations) {\n      let res = this.translate.getParsedResult(translations, key, interpolateParams);\n      if (typeof res.subscribe === 'function') {\n        res.subscribe(onTranslation);\n      } else {\n        onTranslation(res);\n      }\n    }\n    this.translate.get(key, interpolateParams).subscribe(onTranslation);\n  }\n\n  transform(query: string, ...args: any[]): any {\n    if (!query || query.length === 0) {\n      return query;\n    }\n\n    // if we ask another time for the same key, return the last value\n    if (equals(query, this.lastKey) && equals(args, this.lastParams)) {\n      return this.value;\n    }\n\n    let interpolateParams: Object;\n    if (isDefined(args[0]) && args.length) {\n      if (typeof args[0] === 'string' && args[0].length) {\n        // we accept objects written in the template such as {n:1}, {'n':1}, {n:'v'}\n        // which is why we might need to change it to real JSON objects such as {\"n\":1} or {\"n\":\"v\"}\n        let validArgs: string = args[0]\n          .replace(/(\\')?([a-zA-Z0-9_]+)(\\')?(\\s)?:/g, '\"$2\":')\n          .replace(/:(\\s)?(\\')(.*?)(\\')/g, ':\"$3\"');\n        try {\n          interpolateParams = JSON.parse(validArgs);\n        } catch (e) {\n          throw new SyntaxError(`Wrong parameter in TranslatePipe. Expected a valid Object, received: ${args[0]}`);\n        }\n      } else if (typeof args[0] === 'object' && !Array.isArray(args[0])) {\n        interpolateParams = args[0];\n      }\n    }\n\n    // store the query, in case it changes\n    this.lastKey = query;\n\n    // store the params, in case they change\n    this.lastParams = args;\n\n    // set the value\n    this.updateValue(query, interpolateParams);\n\n    // if there is a subscription to onLangChange, clean it\n    this._dispose();\n\n    // subscribe to onTranslationChange event, in case the translations change\n    if (!this.onTranslationChange) {\n      this.onTranslationChange = this.translate.onTranslationChange.subscribe((event: TranslationChangeEvent) => {\n        if (this.lastKey && event.lang === this.translate.currentLang) {\n          this.lastKey = null;\n          this.updateValue(query, interpolateParams, event.translations);\n        }\n      });\n    }\n\n    // subscribe to onLangChange event, in case the language changes\n    if (!this.onLangChange) {\n      this.onLangChange = this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n        if (this.lastKey) {\n          this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n          this.updateValue(query, interpolateParams, event.translations);\n        }\n      });\n    }\n\n    // subscribe to onDefaultLangChange event, in case the default language changes\n    if (!this.onDefaultLangChange) {\n      this.onDefaultLangChange = this.translate.onDefaultLangChange.subscribe(() => {\n        if (this.lastKey) {\n          this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n          this.updateValue(query, interpolateParams);\n        }\n      });\n    }\n\n    return this.value;\n  }\n\n  /**\n   * Clean any existing subscription to change events\n   */\n  private _dispose(): void {\n    if (typeof this.onTranslationChange !== 'undefined') {\n      this.onTranslationChange.unsubscribe();\n      this.onTranslationChange = undefined;\n    }\n    if (typeof this.onLangChange !== 'undefined') {\n      this.onLangChange.unsubscribe();\n      this.onLangChange = undefined;\n    }\n    if (typeof this.onDefaultLangChange !== 'undefined') {\n      this.onDefaultLangChange.unsubscribe();\n      this.onDefaultLangChange = undefined;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._dispose();\n  }\n}\n"]}