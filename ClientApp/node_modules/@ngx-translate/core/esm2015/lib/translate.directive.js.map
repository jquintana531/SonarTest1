{"version":3,"file":"translate.directive.js","sources":["@ngx-translate/core/projects/ngx-translate/core/src/lib/translate.directive.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAmB,iBAAiB,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAY,MAAM,eAAe,CAAC;AAE3G,OAAO,EAA0C,gBAAgB,EAAyB,MAAM,qBAAqB,CAAC;AACtH,OAAO,EAAC,MAAM,EAAE,SAAS,EAAC,MAAM,QAAQ,CAAC;;;AAKzC,MAAM;AAA4B;AAAQ;AACtC;AACW;AACI;AACd,IAkBH,YAAoB,gBAAkC,EAAU,OAAmB,EAAU,IAAuB;AACtH,QADsB,qBAAgB,GAAhB,gBAAgB,CAAkB;AAAC,QAAS,YAAO,GAAP,OAAO,CAAY;AAAC,QAAS,SAAI,GAAJ,IAAI,CAAmB;AAAC;AAEtH,QAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;AACvC,YAAM,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,KAA6B,EAAE,EAAE;AAC1H,gBAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC;AAC/D,oBAAU,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;AACpD,iBAAS;AACT,aAAO,CAAC,CAAC;AACT,SAAK;AACL;AAEG,QAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;AAChC,YAAM,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAsB,EAAE,EAAE;AACrG,gBAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;AAClD,aAAO,CAAC,CAAC;AACT,SAAK;AACL;AAEG,QAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;AACvC,YAAM,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,KAA6B,EAAE,EAAE;AAC1H,gBAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC9B,aAAO,CAAC,CAAC;AACT,SAAK;AACL,KAAG;AACH;AACO;AACH;AACJ;AAEG,QA3CY,SAAS,CAAC,GAAW;AACpC,QAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACd,YAAM,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACrB,YAAM,IAAI,CAAC,UAAU,EAAE,CAAC;AACxB,SAAK;AACL;AAEC;AAAQ;AAAyB;AAC3B;AAAQ,QADA,eAAe,CAAC,MAAW;AAC1C,QAAI,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;AAC9C,YAAM,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;AAClC,YAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC5B,SAAK;AACL;AAEC;AAAQ;AAAmB;AAAQ,IAyBlC,kBAAkB;AACpB,QAAI,IAAI,CAAC,UAAU,EAAE,CAAC;AACtB,KAAG;AACH;AACO;AAA+B;AACxB;AAAmB;AAAQ,IADvC,UAAU,CAAC,WAAW,GAAG,KAAK,EAAE,YAAkB;AACpD,QAAI,qBAAI,KAAK,GAAa,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC;AAChE;AACI,QAAA,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AACxB;AACM,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AAC5D,YAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC;AACpD,SAAK;AACL,QAAI,GAAG,CAAC,CAAC,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;AAC5C,YAAM,qBAAI,IAAI,GAAQ,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,YAAM,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC;AAAC;AACjB,gBAAR,qBAAI,GAAW,CAAC;AACxB,gBAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACvB,oBAAU,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;AACzB,oBAAU,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;AAC5B,wBAAY,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAChC,qBAAW;AACX,iBAAS;AAAC,gBAAA,IAAI,CAAC,CAAC;AAChB,oBAAU,qBAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC9C,oBAAU,qBAAI,cAAc,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;AAC9C,oBAAU,EAAE,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;AACtC;AACY,wBAAA,EAAE,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;AAChD,4BAAc,GAAG,GAAG,cAAc,CAAC;AACnC;AACc,4BAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC3D,yBAAa;AAAC,wBAAA,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,WAAW,CAAC,CAAC,CAAC;AAAC;AAClC,4BAAd,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAClC;AACc,4BAAA,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;AAChD,yBAAa;AACb,qBAAW;AACX,iBAAS;AACT,gBAAQ,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;AAClD,aAAO;AACP,SAAK;AACL,KAAG;AACH;AACO;AAAsB;AAAuB;AAE3C;AAAmB;AAAQ,IAFlC,WAAW,CAAC,GAAW,EAAE,IAAS,EAAE,YAAiB;AACvD,QAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACd,YAAM,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,GAAG,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;AAC3E,gBAAQ,MAAM,CAAC;AACf,aAAO;AACP,YACM,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;AAC3C,YACM,qBAAI,aAAa,GAAG,CAAC,GAAW,EAAE,EAAE;AAC1C,gBAAQ,EAAE,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;AAC1B,oBAAU,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;AAC7B,iBAAS;AACT,gBAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;AACpC,oBAAU,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACvD,iBAAS;AACT,gBAAQ,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,GAAG,CAAC,CAAC;AACjF;AACQ,gBAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;AACnH,gBAAQ,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;AACjC,aAAO,CAAC;AACR,YACM,EAAE,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpC,gBAAQ,qBAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,YAAY,EAAE,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AAC/F,gBAAQ,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,SAAS,KAAK,UAAU,CAAC,CAAC,CAAC;AAClD,oBAAU,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;AACvC,iBAAS;AAAC,gBAAA,IAAI,CAAC,CAAC;AAChB,oBAAU,aAAa,CAAC,GAAG,CAAC,CAAC;AAC7B,iBAAS;AACT,aAAO;AAAC,YAAA,IAAI,CAAC,CAAC;AACd,gBAAQ,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;AACpF,aAAO;AACP,SAAK;AACL,KAAG;AACH;AACO;AAAuB;AACf;AAAQ,IADrB,UAAU,CAAC,IAAS;AAAI,QACtB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AACtE,KAAG;AACH;AACO;AAAuB;AACvB;AAAmB;AAAQ,IADhC,UAAU,CAAC,IAAS,EAAE,OAAe;AAAI,QACvC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACtC,YAAM,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;AACjC,SAAK;AAAC,QAAA,IAAI,CAAC,CAAC;AACZ,YAAM,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;AAC1B,SAAK;AACL,KAAG;AACH;AACO;AACC;AAAQ,IADd,WAAW;AACb,QAAI,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;AAC/B,YAAM,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;AACzC,SAAK;AACL,QACI,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;AACtC,YAAM,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;AAChD,SAAK;AACL,QACI,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;AACtC,YAAM,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;AAChD,SAAK;AACL,KAAG;AACH;8CAvJC,SAAS,SAAC,kBACT,QAAQ,EAAE,6BAA6B,cACxC;sOACK;AAAC;AAAmB;AAA4C,YANrB,gBAAgB;AAAK,YAFd,UAAU;AAAK,YAA7C,iBAAiB;AAAK;AAAG;AAAsC,0BAgBtF,KAAK;AAAM,gCAOX,KAAK;AAAM;;;;;;;;;;oBAAE;AAAC;AACe;AAER;AAIL;AAAQ;AAAmB;AACU;AAAQ;AAC5D;AACkD;AAAuC;AAAqB;AACvF;AAAqB;AACnB;AAAqB;AAKhC;AAAqB;AACnB;AACZ;AAAyD;AAAqB;AAC/C;AAC9B;AAGkC;AAAqB;AAC1C;AACnB;AAAuC;AAAE","sourcesContent":["import {AfterViewChecked, ChangeDetectorRef, Directive, ElementRef, Input, OnDestroy} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {DefaultLangChangeEvent, LangChangeEvent, TranslateService, TranslationChangeEvent} from './translate.service';\nimport {equals, isDefined} from './util';\n\n@Directive({\n  selector: '[translate],[ngx-translate]'\n})\nexport class TranslateDirective implements AfterViewChecked, OnDestroy {\n  key: string;\n  lastParams: any;\n  currentParams: any;\n  onLangChangeSub: Subscription;\n  onDefaultLangChangeSub: Subscription;\n  onTranslationChangeSub: Subscription;\n\n  @Input() set translate(key: string) {\n    if (key) {\n      this.key = key;\n      this.checkNodes();\n    }\n  }\n\n  @Input() set translateParams(params: any) {\n    if (!equals(this.currentParams, params)) {\n      this.currentParams = params;\n      this.checkNodes(true);\n    }\n  }\n\n  constructor(private translateService: TranslateService, private element: ElementRef, private _ref: ChangeDetectorRef) {\n    // subscribe to onTranslationChange event, in case the translations of the current lang change\n    if (!this.onTranslationChangeSub) {\n      this.onTranslationChangeSub = this.translateService.onTranslationChange.subscribe((event: TranslationChangeEvent) => {\n        if (event.lang === this.translateService.currentLang) {\n          this.checkNodes(true, event.translations);\n        }\n      });\n    }\n\n    // subscribe to onLangChange event, in case the language changes\n    if (!this.onLangChangeSub) {\n      this.onLangChangeSub = this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n        this.checkNodes(true, event.translations);\n      });\n    }\n\n    // subscribe to onDefaultLangChange event, in case the default language changes\n    if (!this.onDefaultLangChangeSub) {\n      this.onDefaultLangChangeSub = this.translateService.onDefaultLangChange.subscribe((event: DefaultLangChangeEvent) => {\n        this.checkNodes(true);\n      });\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.checkNodes();\n  }\n\n  checkNodes(forceUpdate = false, translations?: any) {\n    let nodes: NodeList = this.element.nativeElement.childNodes;\n    // if the element is empty\n    if (!nodes.length) {\n      // we add the key as content\n      this.setContent(this.element.nativeElement, this.key);\n      nodes = this.element.nativeElement.childNodes;\n    }\n    for (let i = 0; i < nodes.length; ++i) {\n      let node: any = nodes[i];\n      if (node.nodeType === 3) { // node type 3 is a text node\n        let key: string;\n        if (this.key) {\n          key = this.key;\n          if (forceUpdate) {\n            node.lastKey = null;\n          }\n        } else {\n          let content = this.getContent(node);\n          let trimmedContent = content.trim();\n          if (trimmedContent.length) {\n            // we want to use the content as a key, not the translation value\n            if (content !== node.currentValue) {\n              key = trimmedContent;\n              // the content was changed from the user, we'll use it as a reference if needed\n              node.originalContent = this.getContent(node);\n            } else if (node.originalContent && forceUpdate) { // the content seems ok, but the lang has changed\n              node.lastKey = null;\n              // the current content is the translation, not the key, use the last real content as key\n              key = node.originalContent.trim();\n            }\n          }\n        }\n        this.updateValue(key, node, translations);\n      }\n    }\n  }\n\n  updateValue(key: string, node: any, translations: any) {\n    if (key) {\n      if (node.lastKey === key && this.lastParams === this.currentParams) {\n        return;\n      }\n\n      this.lastParams = this.currentParams;\n\n      let onTranslation = (res: string) => {\n        if (res !== key) {\n          node.lastKey = key;\n        }\n        if (!node.originalContent) {\n          node.originalContent = this.getContent(node);\n        }\n        node.currentValue = isDefined(res) ? res : (node.originalContent || key);\n        // we replace in the original content to preserve spaces that we might have trimmed\n        this.setContent(node, this.key ? node.currentValue : node.originalContent.replace(key, node.currentValue));\n        this._ref.markForCheck();\n      };\n\n      if (isDefined(translations)) {\n        let res = this.translateService.getParsedResult(translations, key, this.currentParams);\n        if (typeof res.subscribe === \"function\") {\n          res.subscribe(onTranslation);\n        } else {\n          onTranslation(res);\n        }\n      } else {\n        this.translateService.get(key, this.currentParams).subscribe(onTranslation);\n      }\n    }\n  }\n\n  getContent(node: any): string {\n    return isDefined(node.textContent) ? node.textContent : node.data;\n  }\n\n  setContent(node: any, content: string): void {\n    if (isDefined(node.textContent)) {\n      node.textContent = content;\n    } else {\n      node.data = content;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.onLangChangeSub) {\n      this.onLangChangeSub.unsubscribe();\n    }\n\n    if (this.onDefaultLangChangeSub) {\n      this.onDefaultLangChangeSub.unsubscribe();\n    }\n\n    if (this.onTranslationChangeSub) {\n      this.onTranslationChangeSub.unsubscribe();\n    }\n  }\n}\n"]}