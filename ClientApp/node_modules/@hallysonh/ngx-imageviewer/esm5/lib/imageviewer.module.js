/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgModule } from '@angular/core';
import { ImageViewerComponent } from './imageviewer.component';
import { IMAGEVIEWER_CONFIG, IMAGEVIEWER_CONFIG_DEFAULT } from './imageviewer.config';
import * as ɵngcc0 from '@angular/core';
var ɵ0 = IMAGEVIEWER_CONFIG_DEFAULT;
var ImageViewerModule = /** @class */ (function () {
    function ImageViewerModule() {
    }
ImageViewerModule.ɵfac = function ImageViewerModule_Factory(t) { return new (t || ImageViewerModule)(); };
ImageViewerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ImageViewerModule });
ImageViewerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: IMAGEVIEWER_CONFIG, useValue: ɵ0 }] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ImageViewerModule, [{
        type: NgModule,
        args: [{
                providers: [{ provide: IMAGEVIEWER_CONFIG, useValue: ɵ0 }],
                declarations: [ImageViewerComponent],
                exports: [ImageViewerComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ImageViewerModule, { declarations: function () { return [ImageViewerComponent]; }, exports: function () { return [ImageViewerComponent]; } }); })();
    return ImageViewerModule;
}());
export { ImageViewerModule };
function ImageViewerModule_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    ImageViewerModule.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    ImageViewerModule.ctorParameters;
}
export { ɵ0 };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2V2aWV3ZXIubW9kdWxlLmpzIiwic291cmNlcyI6WyJAaGFsbHlzb25oL25neC1pbWFnZXZpZXdlci9saWIvaW1hZ2V2aWV3ZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHNCQUFzQixDQUFDOztBQUN0RixTQUV1RCwwQkFBMEI7QUFBRztBQUUxRTtBQUVKO3VEQUxMLFFBQVEsU0FBQyx1QkFDUixTQUFTLEVBQUU7QUFBQyxFQUFFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxRQUFRLElBQTRCLEVBQUUsQ0FBQyx1QkFDbEYsWUFBWSxFQUFFLENBQUM7V0FBb0IsQ0FBQyx1QkFDcEMsT0FBTyxFQUFFLENBQUMsb0JBQW9CLENBQUMsb0JBQ2hDOzs7Ozs7Ozs7Z1BBQ1M7QUFBRSw0QkFUWjtBQUFHO0FBQU8sU0FTRyxpQkFBaUI7QUFBSztBQUN5QjtBQUEyRTtBQUFtQztBQUFTO0FBQW9CO0FBQXFJO0FBQVM7QUFBdUM7OztBQVZBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBREEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQVJBLEFBU0EsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEltYWdlVmlld2VyQ29tcG9uZW50IH0gZnJvbSAnLi9pbWFnZXZpZXdlci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBJTUFHRVZJRVdFUl9DT05GSUcsIElNQUdFVklFV0VSX0NPTkZJR19ERUZBVUxUIH0gZnJvbSAnLi9pbWFnZXZpZXdlci5jb25maWcnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IElNQUdFVklFV0VSX0NPTkZJRywgdXNlVmFsdWU6IElNQUdFVklFV0VSX0NPTkZJR19ERUZBVUxUIH1dLFxyXG4gIGRlY2xhcmF0aW9uczogW0ltYWdlVmlld2VyQ29tcG9uZW50XSxcclxuICBleHBvcnRzOiBbSW1hZ2VWaWV3ZXJDb21wb25lbnRdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgSW1hZ2VWaWV3ZXJNb2R1bGUgeyB9XHJcbiJdfQ==